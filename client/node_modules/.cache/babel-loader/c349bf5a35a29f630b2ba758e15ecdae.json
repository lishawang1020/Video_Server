{"ast":null,"code":"/**\n * @license\n * Video.js 7.9.7 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport '@babel/runtime/helpers/possibleConstructorReturn';\nimport '@babel/runtime/helpers/getPrototypeOf';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _construct from '@babel/runtime/helpers/construct';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport CaptionParser from 'mux.js/lib/mp4/caption-parser';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\nvar version = \"7.9.7\";\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args)); // only store 1000 history entries\n\n      var splice = history.length - 1000;\n      history.splice(0, splice > 0 ? splice : 0);\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n/**\n * @file log.js\n * @module log\n */\n\n\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\n\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return _extends.apply(void 0, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var computedStyleValue = window$1.getComputedStyle(el);\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n\n  return '';\n}\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\n\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val) {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\n\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  var width = el.offsetWidth;\n  var height = el.offsetHeight;\n  var left = 0;\n  var top = 0;\n\n  do {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  } while (el);\n\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var boxTarget = findPosition(event.target);\n  var box = findPosition(el);\n  var boxW = box.width;\n  var boxH = box.height;\n  var offsetY = event.offsetY - (box.top - boxTarget.top);\n  var offsetX = event.offsetX - (box.left - boxTarget.left);\n\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n  }\n\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\n\n\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\n\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n/**\n * @file guid.js\n * @module guid\n */\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\n\n\nvar _initialGuid = 3;\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\n\nvar _guid = _initialGuid;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n\nvar FakeWeakMap;\n\nif (!window$1.WeakMap) {\n  FakeWeakMap = /*#__PURE__*/function () {\n    function FakeWeakMap() {\n      this.vdata = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n      this.data = {};\n    }\n\n    var _proto = FakeWeakMap.prototype;\n\n    _proto.set = function set(key, value) {\n      var access = key[this.vdata] || newGUID();\n\n      if (!key[this.vdata]) {\n        key[this.vdata] = access;\n      }\n\n      this.data[access] = value;\n      return this;\n    };\n\n    _proto.get = function get(key) {\n      var access = key[this.vdata]; // we have data, return it\n\n      if (access) {\n        return this.data[access];\n      } // we don't have data, return nothing.\n      // return undefined explicitly as that's the contract for this method\n\n\n      log('We have no data for this element', key);\n      return undefined;\n    };\n\n    _proto.has = function has(key) {\n      var access = key[this.vdata];\n      return access in this.data;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var access = key[this.vdata];\n\n      if (access) {\n        delete this.data[access];\n        delete key[this.vdata];\n      }\n    };\n\n    return FakeWeakMap;\n  }();\n}\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar DomData = window$1.WeakMap ? new WeakMap() : new FakeWeakMap();\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData[\"delete\"](elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true; // Returns fixed-up instance\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\n\nvar _supportsPassive;\n\nvar supportsPassive = function supportsPassive() {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {// disregard\n    }\n  }\n\n  return _supportsPassive;\n};\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n\n  var data = DomData.get(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n\n    var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n/**\n * @file fn.js\n * @module fn\n */\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = fn.bind(context); // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this; // only set up EVENT_MAP if it'll be used\n\n\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this; // Support providing the `stateUpdates` state as a function.\n\n\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n/**\n * @file string-cases.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\n\n\nvar toLowerCase = function toLowerCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toLowerCase();\n  });\n};\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\n\nvar toTitleCase = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\n\nvar titleCaseEquals = function titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n};\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\nvar MapSham = /*#__PURE__*/function () {\n  function MapSham() {\n    this.map_ = {};\n  }\n\n  var _proto = MapSham.prototype;\n\n  _proto.has = function has(key) {\n    return key in this.map_;\n  };\n\n  _proto[\"delete\"] = function _delete(key) {\n    var has = this.has(key);\n    delete this.map_[key];\n    return has;\n  };\n\n  _proto.set = function set(key, value) {\n    this.set_[key] = value;\n    return this;\n  };\n\n  _proto.forEach = function forEach(callback, thisArg) {\n    for (var key in this.map_) {\n      callback.call(thisArg, this.map_[key], key, this);\n    }\n  };\n\n  return MapSham;\n}();\n\nvar Map$1 = window$1.Map ? window$1.Map : MapSham;\n\nvar SetSham = /*#__PURE__*/function () {\n  function SetSham() {\n    this.set_ = {};\n  }\n\n  var _proto = SetSham.prototype;\n\n  _proto.has = function has(key) {\n    return key in this.set_;\n  };\n\n  _proto[\"delete\"] = function _delete(key) {\n    var has = this.has(key);\n    delete this.set_[key];\n    return has;\n  };\n\n  _proto.add = function add(key) {\n    this.set_[key] = 1;\n    return this;\n  };\n\n  _proto.forEach = function forEach(callback, thisArg) {\n    for (var key in this.set_) {\n      callback.call(thisArg, key, key, this);\n    }\n  };\n\n  return SetSham;\n}();\n\nvar Set = window$1.Set ? window$1.Set : SetSham;\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = /*#__PURE__*/function () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map$1();\n    this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n\n\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true; // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      if (DomData.has(this.el_)) {\n        DomData[\"delete\"](this.el_);\n      }\n\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  ;\n\n  _proto.isDisposed = function isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  ;\n\n  _proto.getDescendant = function getDescendant() {\n    for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\n      names[_key] = arguments[_key];\n    } // flatten array argument into the main array\n\n\n    names = names.reduce(function (acc, n) {\n      return acc.concat(n);\n    }, []);\n    var currentChild = this;\n\n    for (var i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n\n    return currentChild;\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      var refNode = null;\n\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this; // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n\n\n    var timeoutId;\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(function () {\n      if (_this2.setTimeoutIds_.has(timeoutId)) {\n        _this2.setTimeoutIds_[\"delete\"](timeoutId);\n      }\n\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_[\"delete\"](timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    var intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_[\"delete\"](intervalId);\n      window$1.clearInterval(intervalId);\n    }\n\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this3 = this; // Fall back to using a timer.\n\n\n    if (!this.supportsRaf_) {\n      return this.setTimeout(fn, 1000 / 60);\n    }\n\n    this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n    var id;\n    fn = bind(this, fn);\n    id = window$1.requestAnimationFrame(function () {\n      if (_this3.rafIds_.has(id)) {\n        _this3.rafIds_[\"delete\"](id);\n      }\n\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  ;\n\n  _proto.requestNamedAnimationFrame = function requestNamedAnimationFrame(name, fn) {\n    var _this4 = this;\n\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n\n    this.clearTimersOnDispose_();\n    fn = bind(this, fn);\n    var id = this.requestAnimationFrame(function () {\n      fn();\n\n      if (_this4.namedRafs_.has(name)) {\n        _this4.namedRafs_[\"delete\"](name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  ;\n\n  _proto.cancelNamedAnimationFrame = function cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_[\"delete\"](name);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.clearTimeout(id);\n    }\n\n    if (this.rafIds_.has(id)) {\n      this.rafIds_[\"delete\"](id);\n      window$1.cancelAnimationFrame(id);\n    }\n\n    return id;\n  }\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  ;\n\n  _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n    var _this5 = this;\n\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', function () {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n        var idName = _ref[0],\n            cancelName = _ref[1]; // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n\n        _this5[idName].forEach(function (val, key) {\n          return _this5[cancelName](key);\n        });\n      });\n      _this5.clearingTimersOnDispose_ = false;\n    });\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    Component.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name || !Component.components_) {\n      return;\n    }\n\n    return Component.components_[name];\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edg/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IS_IPOD: IS_IPOD,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\n\n\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\n\n\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n\n\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n\n\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n\n\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n\n\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\n\nvar TextTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\n\nvar HtmlTrackElementList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\n\nvar TextTrackCueList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\n\n\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n\n\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\n\nvar isCrossOrigin = function isCrossOrigin(url, winLoc) {\n  if (winLoc === void 0) {\n    winLoc = window$1.location;\n  }\n\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  var withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n          if (event.type === 'vttjserror') {\n            log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n            return;\n          }\n\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    _this.preload_ = _this.tech_.preloadTextTracks !== false;\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n\n      if (!_this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        _this.loaded_ = true;\n      }\n\n      if (_this.preload_ || default_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(_this.src, _assertThisInitialized(_this));\n      }\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n\n\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\n\nvar VideoTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n\n\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = _extends({}, NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Tech, _Component);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    } // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n\n\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.preloadTextTracks = options.preloadTextTracks !== false;\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  ;\n\n  _proto.crossOrigin = function crossOrigin() {}\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  ;\n\n  _proto.setCrossOrigin = function setCrossOrigin() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#setScrubbing}\n   */\n  ;\n\n  _proto.setScrubbing = function setScrubbing() {}\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.disablePictureInPicture = function disablePictureInPicture() {\n    return true;\n  }\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setDisablePictureInPicture = function setDisablePictureInPicture() {}\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    name = toTitleCase(name);\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n/**\n * @file middleware.js\n * @module middleware\n */\n\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  if (!src.type) {\n    var mimetype = getMimetype(src.src);\n\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n\n  return src;\n}\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\n\nvar MediaLoader = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n\n\n  function MediaLoader(player, options, ready) {\n    var _this; // MediaLoader has no element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   */\n\n\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off('mouseover', this.handleMouseOver);\n    this.off('mouseout', this.handleMouseOut);\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n\n    if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n    // calling .focus() on the video element causes the video to go black,\n    // so we avoid it in that specific case\n    !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n\n\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n      // calling .focus() on the video element causes the video to go black,\n      // so we avoid it in that specific case\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n\n\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\n\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\n\nvar TimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['timeupdate', 'ended'], _this.updateContent);\n\n    _this.updateTextNode_();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_(time) {\n    var _this2 = this;\n\n    if (time === void 0) {\n      time = 0;\n    }\n\n    time = formatTime(time);\n\n    if (this.formattedTime_ === time) {\n      return;\n    }\n\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', function () {\n      if (!_this2.contentEl_) {\n        return;\n      }\n\n      var oldNode = _this2.textNode_;\n      _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\n\n      if (!_this2.textNode_) {\n        return;\n      }\n\n      if (oldNode) {\n        _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\n      } else {\n        _this2.contentEl_.appendChild(_this2.textNode_);\n      }\n    });\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  function CurrentTimeDisplay() {\n    return _TimeDisplay.apply(this, arguments) || this;\n  }\n\n  var _proto = CurrentTimeDisplay.prototype;\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time;\n\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n\n    var time; // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\n\nvar clamp = function clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n};\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\n\nvar Slider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Slider, _Component);\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n\n\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick); // TODO: deprecated, controlsvisible does not seem to be fired\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    } // Add the slider element class to all sub classes\n\n\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    var _this2 = this; // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n\n\n    if (!this.el_ || !this.bar) {\n      return;\n    } // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n\n\n    var progress = this.getProgress();\n\n    if (progress === this.progress_) {\n      return progress;\n    }\n\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', function () {\n      // Set the new bar width or height\n      var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\n\n      _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  ;\n\n  _proto.getProgress = function getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\nvar percentify = function percentify(time, end) {\n  return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n};\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\n\nvar LoadProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress'\n    });\n\n    var wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    var loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    var separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('LoadProgressBar#update', function () {\n      var liveTracker = _this2.player_.liveTracker;\n\n      var buffered = _this2.player_.buffered();\n\n      var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\n\n      var bufferedEnd = _this2.player_.bufferedEnd();\n\n      var children = _this2.partEls_;\n      var percent = percentify(bufferedEnd, duration);\n\n      if (_this2.percent_ !== percent) {\n        // update the width of the progress bar\n        _this2.el_.style.width = percent; // update the control-text\n\n        textContent(_this2.percentageEl_, percent);\n        _this2.percent_ = percent;\n      } // add child elements to represent the individual buffered time ranges\n\n\n      for (var i = 0; i < buffered.length; i++) {\n        var start = buffered.start(i);\n        var end = buffered.end(i);\n        var part = children[i];\n\n        if (!part) {\n          part = _this2.el_.appendChild(createEl());\n          children[i] = part;\n        } //  only update if changed\n\n\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n\n        part.dataset.start = start;\n        part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\n\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      } // remove unused buffered range elements\n\n\n      for (var _i = children.length; _i > buffered.length; _i--) {\n        _this2.el_.removeChild(children[_i - 1]);\n      }\n\n      children.length = buffered.length;\n    });\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TimeTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = findPosition(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', function () {\n      var content;\n\n      var duration = _this2.player_.duration();\n\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n        var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this2.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlayProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update_ = bind(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.update();\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n\n    if (!this.updateInterval) {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.requestNamedAnimationFrame('SeekBar#update', function () {\n      var currentTime = _this2.player_.ended() ? _this2.player_.duration() : _this2.getCurrentTime_();\n      var liveTracker = _this2.player_.liveTracker;\n\n      var duration = _this2.player_.duration();\n\n      if (liveTracker && liveTracker.isLive()) {\n        duration = _this2.player_.liveTracker.liveCurrentTime();\n      }\n\n      if (_this2.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        _this2.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n        _this2.percent_ = percent;\n      }\n\n      if (_this2.currentTime_ !== currentTime || _this2.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        _this2.el_.setAttribute('aria-valuetext', _this2.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n        _this2.currentTime_ = currentTime;\n        _this2.duration_ = duration;\n      } // update the progress bar time tooltip with the current time\n\n\n      if (_this2.bar) {\n        _this2.bar.update(getBoundingClientRect(_this2.el()), _this2.getProgress());\n      }\n    });\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    this.off(this.player_, ['playing'], this.enableInterval_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n\n    _Slider.prototype.dispose.call(this);\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (!seekBar) {\n      return;\n    }\n\n    var playProgressBar = seekBar.getChild('playProgressBar');\n    var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n\n    var seekBarEl = seekBar.el();\n    var seekBarRect = findPosition(seekBarEl);\n    var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n\n\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange);\n\n    _this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], _this.handlePictureInPictureEnabledChange); // TODO: Deactivate button on player emptied event.\n\n\n    _this.disable();\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enables or disables button based on document.pictureInPictureEnabled property value\n   * or on value returned by player.disablePictureInPicture() method.\n   */\n  ;\n\n  _proto.handlePictureInPictureEnabledChange = function handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n\n    this.handlePictureInPictureEnabledChange();\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\n\nvar VolumeLevel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\n\nvar MuteToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    _this.on(_this.muteToggle, 'keyup', _this.handleKeyPress);\n\n    _this.on(_this.volumeControl, 'keyup', _this.handleVolumeControlKeyUp);\n\n    _this.on('keydown', _this.handleKeyPress);\n\n    _this.on('mouseover', _this.handleMouseOver);\n\n    _this.on('mouseout', _this.handleMouseOut); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseOut();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  ;\n\n  _proto.handleMouseOver = function handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  ;\n\n  _proto.handleMouseOut = function handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Menu, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n\n\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.addClass('vjs-hover');\n\n      _this.menu.show();\n\n      on(document, 'keyup', bind(_assertThisInitialized(_this), _this.handleMenuKeyUp));\n    });\n\n    _this.on('mouseleave', _this.handleMouseLeave);\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseLeave();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  ;\n\n  _proto.handleMouseLeave = function handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleMenuKeyUp));\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\n\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n\n\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    } // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n\n\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n\n\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    } // if there's only one audio track, there no point in showing it\n\n\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = /*#__PURE__*/function (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\n\nComponent.registerComponent('ControlBar', ControlBar);\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = _extends({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n\n\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\nvar defaults = {\n  trackingThreshold: 30,\n  liveTolerance: 15\n};\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\n\nvar LiveTracker = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=30]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect wether we are live or not.\n   */\n\n\n  function LiveTracker(player, options) {\n    var _this; // LiveTracker does not need an element\n\n\n    var options_ = mergeOptions(defaults, options, {\n      createEl: false\n    });\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n  /**\n   * toggle tracking based on document visiblility\n   */\n\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  }\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newTime = Number(window$1.performance.now().toFixed(4));\n    var deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime(); // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n\n    var isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance; // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android\n\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLive_);\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked);\n    }\n  }\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  ;\n\n  _proto.handleFirstTimeupdate = function handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked);\n  }\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked() {\n    var timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.skipNextSeeked_ ? false : timeDiff > 2;\n    this.skipNextSeeked_ = false;\n    this.trackLive_();\n  }\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.skipNextSeeked_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLive_);\n    this.off(this.player_, 'seeked', this.handleSeeked);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Wether liveTracker is tracking\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Wether playback is at the live edge\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * The number of seconds that have occured after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    var seekableEnd = this.seekableEnd();\n\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n  /**\n   * Wether live tracker is currently tracking or not.\n   */\n  ;\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n\n    if (this.atLiveEdge()) {\n      return;\n    } // skipNextSeeked_\n\n\n    this.skipNextSeeked_ = true;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n  /**\n   * Dispose of liveTracker\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.off(document, 'visibilitychange', this.handleVisibilityChange);\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter wether a setter shoould be allowed or not\n */\n\n\nvar defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n  if (setter === void 0) {\n    setter = true;\n  }\n\n  var set = function set(value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      writable: true\n    });\n  };\n\n  var options = {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var value = getValue();\n      set(value);\n      return value;\n    }\n  };\n\n  if (setter) {\n    options.set = set;\n  }\n\n  return Object.defineProperty(obj, key, options);\n};\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\n\nvar Html5 = /*#__PURE__*/function (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this; // If there is no behavioral change don't add/remove listeners\n\n\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        var event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event); // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n\n        if (name === 'text') {\n          _this3[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  ;\n\n  _proto.setScrubbing = function setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this; // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n\n\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play()); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\n\n\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n\n  var video = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\n[['featuresVolumeControl', 'canControlVolume'], ['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\n  var key = _ref[0],\n      fn = _ref[1];\n  defineLazyProperty(Html5.prototype, key, function () {\n    return Html5[fn]();\n  }, true);\n});\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true; // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  if (canPlayType) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  }\n\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5); // on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Player, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n\n\n  function Player(tag, options, ready) {\n    var _this; // Make sure tag ID exists\n\n\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // default isFullscreen_ to false\n\n    _this.isFullscreen_ = false; // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // Init debugEnabled_\n\n    _this.debugEnabled_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    }); // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n\n    if (_this.fsApi_.requestFullscreen) {\n      on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n\n      _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n    }\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    } // Enable debug mode to fire debugon event for all plugins.\n\n\n    if (options.debug) {\n      _this.debug(true);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        try {\n          tag[k] = el[k];\n        } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.crossOrigin = function crossOrigin(value) {\n    if (!value) {\n      return this.techGet_('crossOrigin');\n    }\n\n    if (value !== 'anonymous' && value !== 'use-credentials') {\n      log.warn(\"crossOrigin must be \\\"anonymous\\\" or \\\"use-credentials\\\", given \\\"\" + value + \"\\\"\");\n      return;\n    }\n\n    this.techCall_('setCrossOrigin', value);\n    return;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this; // Pause and remove current playback technology\n\n\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'fullscreenerror', this.handleTechFullscreenError_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this; // Save the current text tracks so that we can reuse the same text tracks with the next tech\n\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this; // only update the source cache when the source\n    // was not updated using the player api\n\n\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the initial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], function (e) {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n\n          var techSrc = _this6.techGet('currentSrc');\n\n          _this6.lastSource_.tech = techSrc;\n\n          _this6.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var targetPlayer = e.target.player; // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs);\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.toggleClass('vjs-ios-native-fs');\n      }\n\n      this.isFullscreen(data.isFullscreen);\n    }\n  };\n\n  _proto.handleTechFullscreenError_ = function handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.applyInitTime_);\n        this.one('canplay', this.applyInitTime_);\n        return;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  ;\n\n  _proto.applyInitTime_ = function applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      var oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {EventTarget~Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.requestFullscreenHelper_(fullscreenOptions);\n\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          return promise;\n        }\n      });\n    }\n\n    return this.requestFullscreenHelper_();\n  };\n\n  _proto.requestFullscreenHelper_ = function requestFullscreenHelper_(fullscreenOptions) {\n    var _this10 = this;\n\n    var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    } // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      if (promise) {\n        promise.then(function () {\n          return _this10.isFullscreen(true);\n        }, function () {\n          return _this10.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.exitFullscreenHelper_();\n\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          return promise;\n        }\n      });\n    }\n\n    return this.exitFullscreenHelper_();\n  };\n\n  _proto.exitFullscreenHelper_ = function exitFullscreenHelper_() {\n    var _this11 = this;\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = document[this.fsApi_.exitFullscreen]();\n\n      if (promise) {\n        promise.then(function () {\n          return _this11.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Disable Picture-in-Picture mode.\n   *\n   * @param {boolean} value\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  ;\n\n  _proto.disablePictureInPicture = function disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n      if (el.isContentEditable) {\n        return true;\n      } // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      } // The final test is by tag name. These tags will be excluded entirely.\n\n\n      var excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this12 = this; // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n\n\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1]; // Check if the current tech is defined before continuing\n\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this12.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this13 = this; // getter usage\n\n\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // initial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this13.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this13.cache_.sources = sources;\n\n      _this13.updateSourceCaches_(middlewareSource);\n\n      var err = _this13.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this13.src(sources.slice(1));\n        }\n\n        _this13.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this13.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this13.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this13.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this14 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this14.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this15 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this15.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   * When manualCleanup is set to false, the track will be automatically removed\n   * on source changes.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *                                       removed on a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this16 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this16.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this17 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this17.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  }\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   */\n  ;\n\n  _proto.debug = function debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\n\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    } // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\n\n\n  if (superClass) {\n    subClass.super_ = superClass;\n  } // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\nvideojs$1.defineLazyProperty = defineLazyProperty;\n/**\n * @videojs/http-streaming\n * @version 1.13.4\n * @copyright 2020 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.id];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === media.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar createPlaylistID = function createPlaylistID(index, uri) {\n  return index + '-' + uri;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = createPlaylistID(i, playlist.uri);\n    master.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    master.playlists[playlist.uri] = playlist;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media(), 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri, _this.media().id);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, playlist, startingState) {\n      var uri = playlist.uri,\n          id = playlist.id; // any in-flight request is now finished\n\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[id],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + uri + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url, id) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url;\n      parser.manifest.id = id; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[id];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n      this.off();\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.id].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri, playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        }\n\n        var id = createPlaylistID(0, _this5.srcUrl); // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: id,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[id] = _this5.master.playlists[0]; // URI reference added for backwards compatibility\n\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl, id);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * A liveEdgePadding can be provided which will be used instead of calculating the safe live edge.\n * This corresponds to suggestedPresentationDelay in DASH manifests.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @param {Number} [liveEdgePadding]\n *        A number in seconds indicating how far from the end we want to be.\n *        If provided, this value is used instead of calculating the safe live index from the target durations.\n *        Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist, liveEdgePadding) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length;\n  var lastSegmentDuration = playlist.segments[i - 1].duration || playlist.targetDuration;\n  var safeDistance = typeof liveEdgePadding === 'number' ? liveEdgePadding : lastSegmentDuration + playlist.targetDuration * 2;\n\n  if (safeDistance === 0) {\n    return i;\n  }\n\n  var distanceFromEnd = 0;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {Number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist, liveEdgePadding) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired, liveEdgePadding) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    Stream.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n\n    Stream.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n\n    Stream.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i,\n            avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length], // numOfSequenceParameterSets\n        sequenceParameterSets, // \"SPS\"\n        [pps.length], // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n              vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n\n        return box.apply(null, avc1Box);\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytesOffest, bytes, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 16);\n        bytes.set(header);\n        bytesOffest = header.length;\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n          bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n          bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n        }\n\n        return box(types.trun, bytes);\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, bytesOffest, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 8);\n        bytes.set(header);\n        bytesOffest = header.length;\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n        }\n\n        return box(types.trun, bytes);\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    }; // generate the track's sample table from a frame\n\n\n    var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n      var sample,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n\n    var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n      var i,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = frame.byteLength,\n          numberOfNals = frame.length,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    var silence;\n\n    var silence_1 = function silence_1() {\n      if (!silence) {\n        // Frames-of-silence to use for filling in missing AAC frames\n        var coneOfSilence = {\n          96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n          88200: [highPrefix, [231], zeroFill(170), [56]],\n          64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n          48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n          44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n          32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n          24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n          16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n          12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n          11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n          8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n        };\n        silence = makeTable(coneOfSilence);\n      }\n\n      return silence;\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs,\n        metadataTsToSeconds;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n\n    metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n\n    var clock = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i,\n          firstFrame;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n\n      silentFrame = silence_1()[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n\n    CaptionStream.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n\n    CaptionStream.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n\n    CaptionStream.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n\n      this.push = function (data) {\n        // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          programMapTable,\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n\n      this.flush = function () {\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n    var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream(handlePartialSegments) {\n      var buffer,\n          frameNum = 0;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n          frameNum++; // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          } // Remove the finished frame from the buffer and start the process again\n\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          sarRatio: sarRatio\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var audioProperties = AUDIO_PROPERTIES;\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n    var videoProperties = VIDEO_PROPERTIES;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          audioProperties.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$3 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          this.trigger('timingInfo', {\n            start: frames[0].pts,\n            end: frames[0].pts + frames.length * frameDuration\n          });\n        }\n\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          videoProperties.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].pts,\n          end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        videoProperties.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        audioProperties.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n\n    _CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n          var baseMediaDecodeTime = !options.keepOriginalTimestamps ? self.baseMediaDecodeTime : 0;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n                // because this is a particularly subtle form of timestamp alteration.\n                if (audioTrack && !options.keepOriginalTimestamps) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n        }\n\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: audioProperties,\n      VIDEO_PROPERTIES: videoProperties,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer$$1) {\n      transmuxer$$1.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer$$1.captionStream) {\n        transmuxer$$1.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer$$1.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer$$1.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer$$1.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new transmuxer.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      if (!this.pendingBuffers_.length) {\n        // We are no longer in the internal \"updating\" state\n        this.trigger('updateend');\n        this.bufferUpdating_ = false;\n        return;\n      } // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.transmuxer_) {\n        this.transmuxer_.terminate();\n      }\n\n      this.trigger('dispose');\n      this.off();\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.off();\n      this.sourceBuffers.forEach(function (buffer) {\n        if (buffer.dispose) {\n          buffer.dispose();\n        }\n      });\n      this.sourceBuffers.length = 0;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var id = properties.playlists[0].id;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var id in playlists) {\n    var playlist = playlists[id];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().id);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.off();\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.id]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.id] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri;\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          var id = createPlaylistID(0, _phonyUri);\n          properties.playlists[0].uri = _phonyUri;\n          properties.playlists[0].id = id; // setup ID and URI references (URI for backwards compatibility)\n\n          master.playlists[id] = properties.playlists[0];\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        var currentSidxInfo = _this8.media().sidx;\n\n        if (updatedMaster) {\n          if (currentSidxInfo) {\n            var sidxKey = generateSidxKey(currentSidxInfo); // the sidx was updated, so the previous mapping was removed\n\n            if (!_this8.sidxMapping_[sidxKey]) {\n              var playlist = _this8.media();\n\n              _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n                handleManifestRedirects: _this8.handleManifestRedirects\n              }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n                if (!newMaster || !sidx) {\n                  throw new Error('failed to request sidx on minimumUpdatePeriod');\n                } // update loader's sidxMapping with parsed sidx box\n\n\n                _this8.sidxMapping_[sidxKey].sidx = sidx;\n                _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                  _this8.trigger('minimumUpdatePeriod');\n                }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n                _this8.refreshMedia_(_this8.media().id);\n\n                return;\n              }));\n            }\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaID) {\n      var _this9 = this;\n\n      if (!mediaID) {\n        throw new Error('refreshMedia_ must take a media id');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaID];\n      } else {\n        this.media_ = newMaster.playlists[mediaID];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {Number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  var pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  var trimTime = currentTime - 30;\n\n  if (seekable$$1.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable$$1.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n\n  var maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.triggerSyncInfoUpdate_ = function () {\n      return _this.trigger('syncinfoupdate');\n    };\n\n    _this.syncController_.on('syncinfoupdate', _this.triggerSyncInfoUpdate_);\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n        this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n      }\n\n      this.off();\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      //\n      // Use the INIT state to determine if playback has started, as the playlist sync info\n      // should be fixed once requests begin (as sync points are generated based on sync\n      // info), but not before then.\n\n      if (this.state === 'INIT') {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n      // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n      // we then clamp the value to duration if necessary.\n\n      this.remove(0, Infinity, done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      // clamp end to duration if we need to remove everything.\n      // This is due to a browser bug that causes issues if we remove to Infinity.\n      // videojs/videojs-contrib-hls#1225\n      if (end === Infinity) {\n        end = this.duration_();\n      }\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n        startOfSegment = lastBufferedEnd;\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        // Subtract any difference between the PTS and DTS times of the first frame\n        // from the timeStampOffset (which currently equals the buffered.end) to prevent\n        // creating any gaps in the buffer\n        if (timingInfo && timingInfo.segmentTimestampInfo) {\n          var ptsStartTime = timingInfo.segmentTimestampInfo[0].ptsTime;\n          var dtsStartTime = timingInfo.segmentTimestampInfo[0].dtsTime;\n          segmentInfo.timestampOffset -= ptsStartTime - dtsStartTime;\n        }\n\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.id,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    _this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(_this3.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 segment to determine the start of the segment\n     * in it's internal \"composition time\", which is equal to the base\n     * media decode time plus the composition time offset value\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"composition time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment; // get timescales from init segment\n\n      var timescales = mp4probe.timescale(segment.map.bytes); // calculate composition start time using the timescales and information\n      // contained within the media segment\n\n      var compositionStartTime = mp4probe.compositionStartTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= compositionStartTime;\n      }\n\n      return {\n        start: compositionStartTime,\n        end: compositionStartTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n      var segmentTimestampInfo = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n        segmentTimestampInfo = timeInfo.video;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n        segmentTimestampInfo = timeInfo.audio;\n      }\n\n      var probedInfo = {\n        segmentTimestampInfo: segmentTimestampInfo,\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.off();\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\nvar shouldSwitchToMedia = function shouldSwitchToMedia(_ref) {\n  var currentPlaylist = _ref.currentPlaylist,\n      nextPlaylist = _ref.nextPlaylist,\n      forwardBuffer = _ref.forwardBuffer,\n      bufferLowWaterLine = _ref.bufferLowWaterLine,\n      duration$$1 = _ref.duration,\n      log = _ref.log; // we have no other playlist to switch to\n\n  if (!nextPlaylist) {\n    videojs$1.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  } // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n\n  if (!currentPlaylist.endList) {\n    return true;\n  } // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n\n  if (duration$$1 < Config.MAX_BUFFER_LOW_WATER_LINE) {\n    return true;\n  } // we want to switch down to lower resolutions quickly to continue playback, but\n\n\n  if (nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH) {\n    return true;\n  } // ensure we have some buffer before we switch up to prevent us running out of\n  // buffer while loading a higher rendition.\n\n\n  if (forwardBuffer >= bufferLowWaterLine) {\n    return true;\n  }\n\n  return false;\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        cacheEncryptionKeys = options.cacheEncryptionKeys,\n        sourceType = options.sourceType;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n    _this.hasPlayed_ = false;\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_;\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: _this.tech_.featuresNativeTextTracks\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine();\n\n        if (shouldSwitchToMedia({\n          currentPlaylist: currentPlaylist,\n          nextPlaylist: nextPlaylist,\n          forwardBuffer: forwardBuffer,\n          bufferLowWaterLine: bufferLowWaterLine,\n          duration: _this3.duration(),\n          log: _this3.logger_\n        })) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n\n      if (this.hasPlayed_) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.tech_.setCurrentTime(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.tech_.setCurrentTime(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = true;\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.tech_.setCurrentTime(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      var suggestedPresentationDelay = this.masterPlaylistLoader_.master.suggestedPresentationDelay;\n      var mainSeekable = Hls.Playlist.seekable(media, expired, suggestedPresentationDelay);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired, suggestedPresentationDelay);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.trigger('dispose');\n\n      if (this.decrypter_) {\n        this.decrypter_.terminate();\n      }\n\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n      this.off();\n\n      if (this.mediaSource.dispose) {\n        this.mediaSource.dispose();\n      }\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistID, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistID];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.id, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    if (!playlists || !playlists.master || !playlists.master.playlists) {\n      return [];\n    }\n\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.id);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.13.4\";\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, mainSegmentLoader, audioSegmentLoader) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  var videoMimeType = void 0;\n  var audioMimeType = void 0; // if there is a mimeType associated with the audioSegmentLoader, then the audio\n  // and video mimeType and codec strings are already in the format we need to\n  // pass with the other key systems\n\n  if (audioSegmentLoader.mimeType_) {\n    videoMimeType = mainSegmentLoader.mimeType_;\n    audioMimeType = audioSegmentLoader.mimeType_; // if there is no audioSegmentLoader mimeType, then we have to create the\n    // the audio and video mimeType/codec strings from information extrapolated\n    // from the mainSegmentLoader mimeType (ex. 'video/mp4; codecs=\"mp4, avc1\"' -->\n    // 'video/mp4; codecs=\"avc1\"' and 'audio/mp4; codecs=\"mp4\"')\n  } else {\n    var parsedMimeType = parseContentType(mainSegmentLoader.mimeType_);\n    var codecs = parsedMimeType.parameters.codecs.split(',');\n    var audioCodec = void 0;\n    var videoCodec = void 0;\n    codecs.forEach(function (codec) {\n      codec = codec.trim();\n\n      if (isAudioCodec(codec)) {\n        audioCodec = codec;\n      } else if (isVideoCodec(codec)) {\n        videoCodec = codec;\n      }\n    });\n    videoMimeType = parsedMimeType.type + '; codecs=\"' + videoCodec + '\"';\n    audioMimeType = parsedMimeType.type.replace('video', 'audio') + '; codecs=\"' + audioCodec + '\"';\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n  var videoPlaylist = mainSegmentLoader.playlist_;\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: audioMimeType,\n      videoContentType: videoMimeType\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  var mainSegmentLoader = hlsHandler.masterPlaylistController_.mainSegmentLoader_;\n  var audioSegmentLoader = hlsHandler.masterPlaylistController_.audioSegmentLoader_;\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, mainSegmentLoader, audioSegmentLoader);\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n      // in non-IE11 browsers. In IE11 this is too early to initialize media keys\n\n      if (!(videojs$1.browser.IE_VERSION === 11) && player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.ignoreNextSeekingEvent_ = false;\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    });\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n      this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      }); // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n      this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n      // or qualityLevels_ listeners have already been setup, do nothing.\n\n      if (!player || !player.qualityLevels || this.qualityLevels_) {\n        return;\n      }\n\n      this.qualityLevels_ = player.qualityLevels();\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n      });\n      this.playlists.on('mediachange', function () {\n        handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n      });\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;","map":{"version":3,"sources":["/Users/lisa/Desktop/Github_Profile/Video_Server/client/node_modules/video.js/dist/video.es.js"],"names":["window$1","document","_extends","_assertThisInitialized","_inheritsLoose","safeParseTuple","keycode","XHR","vtt","_construct","_inherits","URLToolkit","Parser","parse","parseUTCTiming","mp4Inspector","mp4probe","CaptionParser","tsInspector","Decrypter","AsyncStream","decrypt","version","history","LogByTypeFactory","name","log","type","level","args","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","concat","splice","length","console","fn","info","test","Array","isArray","createLogger","logByType","_len","arguments","_key","subname","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","toString","Object","prototype","keys","object","isObject","each","forEach","key","reduce","initial","accum","assign","target","sources","apply","source","value","isPlain","call","constructor","computedStyle","el","prop","getComputedStyle","computedStyleValue","getPropertyValue","isNonBlankString","str","Boolean","trim","throwIfWhitespace","indexOf","classRegExp","className","isReal","isEl","nodeType","isInFrame","parent","self","x","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","createElement","getOwnPropertyNames","propName","val","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","addClass","classToAdd","add","removeClass","classToRemove","remove","split","c","join","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","obj","knownBooleans","attrs","i","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","result","k","undefined","height","parseFloat","width","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","offsetLeft","offsetTop","getPointerPosition","event","position","boxTarget","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","y","Math","max","min","isTextNode","emptyEl","removeChild","normalizeContent","map","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","__proto__","_windowLoaded","videojs","autoSetup","options","vids","slice","getElementsByTagName","audios","divs","mediaEls","e","mediaEl","player","autoSetupTimeout","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","createStyleElement","style","setTextContent","styleSheet","cssText","_initialGuid","_guid","newGUID","FakeWeakMap","WeakMap","vdata","floor","performance","now","Date","data","_proto","set","access","get","_delete","DomData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","documentElement","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","_supportsPassive","supportsPassive","opts","defineProperty","passiveEvents","on","guid","hash","handlersCopy","m","n","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","any","Events","UPDATE_REFRESH_INTERVAL","bind","uid","bound","throttle","last","throttled","debounce","immediate","timeout","cancel","clearTimeout","debounced","_later","later","EventTarget","allowedEvents_","ael","dispatchEvent","EVENT_MAP","queueTrigger","_this","Map","oldTimeout","size","isEvented","eventBusEl_","every","addEventedCallback","eventedCallbacks","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","_this3","_normalizeListenArgs3","_len5","_key5","off$1","targetOrType","typeOrListener","trigger$1","evented","_options","eventBusKey","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toLowerCase","string","replace","w","toTitleCase","titleCaseEquals","str1","str2","mergeOptions","MapSham","map_","set_","thisArg","Map$1","SetSham","Set","Component","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","name_","el_","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","isDisposed","createEl$1","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","match","index","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","names","acc","currentChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","some","wchild","isTech","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","$$1","$$$1","hasClass$1","addClass$1","removeClass$1","toggleClass$1","show","hide","lockShowing","unlockShowing","getAttribute$1","setAttribute$1","removeAttribute$1","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","supportsRaf_","requestNamedAnimationFrame","_this4","cancelNamedAnimationFrame","cancelAnimationFrame","_this5","_ref","idName","cancelName","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","pop","IS_IPOD","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","browser","rangeCheck","fnName","maxIndex","getRange","valueIndex","ranges","rangeIndex","createTimeRangesObj","start","end","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","FullscreenApi","prefixed","apiMap","specApi","browserApi","_i","MediaError","message","defaultMessages","status","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","json","src","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","label","previouslyActiveEl_","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","close","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","isEventKey","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","disableOthers","list","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","nonLanguageTextTrackKind","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","url","props","a","href","addToBody","host","protocol","div","innerHTML","details","location","getAbsoluteURL","getFileExtension","path","splitPathRe","pathParts","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","parser","WebVTT","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","uri","cors","withCredentials","tech_","err","response","responseBody","loaded_","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","load","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","bufferedPercent$1","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","setCurrentTime","trackListChanges","addWebVttScript_","script","onload","onerror","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","use","middleware","next","setSourceHelper","setTech","mw","reduceRight","middlewareIterator","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","muted","seekable","volume","allowedSetters","setMuted","setVolume","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","_middleware","mwrest","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","s","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleMouseOver","handleMouseOut","clickHandler","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","modes","trackList","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","h","gm","gh","Infinity","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","TimeDisplay","updateContent","updateTextNode_","labelText_","textNode_","time","formattedTime_","oldNode","replaceChild","CurrentTimeDisplay","_TimeDisplay","ended","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","clamp","number","Number","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","_Slider","setEventHandlers_","update_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","codes","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","playProgressBar","seekBarEl","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","requestFullscreen","exitFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","ariaValue","volumeAsPercentage_","round","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","item","haveTitle","MenuButton","buttonClass","menu","handleMenuKeyUp","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","title","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","values","JSON","localStorage","getItem","setItem","stringify","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","trackLive_","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","abs","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","handleFirstTimeupdate","timeDiff","skipNextSeeked_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","enumerable","configurable","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","defineLazyProperty","getValue","setter","writable","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","isScrubbing_","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","mpegurlRE","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","crossorigin","links","linkEl","techGet_","techCall_","_dimension","privDimension","parsedVal","ratio","aspectRatio_","_width","width_","_height","height_","techEl","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","manualAutoplay_","previouslyMuted","restoreMuted","mutedPromise","promise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","inAllowedEls","userActions","doubleClick","userWasActive","toggleFullscreenClass_","targetPlayer","isFs","fullscreenElement","matches","fullscreen","msMatchesSelector","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","media","_this8","resolve","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","applyInitTime_","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","_this10","fsOptions","enterFullWindow","exitFullscreenHelper_","_this11","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","excludeElement","isContentEditable","allowedInputTypes","excludedTags","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this12","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","b","finder","_ref2","sourceOrder","_this13","notSupportedMessage","middlewareSource","src_","_this14","sourceTech","_this15","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","handleMouseUpAndMouseLeave","isAudio_","_obj","String","toJSON","createModal","_this16","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","current","loadMedia","_this17","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","previousLogLevel_","html5","flash","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","instance","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","hasPlugin","extend","superClass","subClassMethods","subClass","methods","super_","normalizeId","videojs$1","getPlayer","TypeError","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","writeable","addLanguage","_mergeOptions","createTimeRange","xhr","dom","resolveUrl","baseURL","relativeURL","buildAbsoluteURL","resolveManifestRedirect","handleManifestRedirect","req","responseURL","classCallCheck","Constructor","createClass","protoProps","staticProps","get$1","property","receiver","Function","getPrototypeOf","getter","inherits","create","setPrototypeOf","possibleConstructorReturn","ReferenceError","slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","Symbol","iterator","_s","done","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","master","mediaType","groupKey","mediaGroups","labelKey","mediaProperties","updateSegments","offset","resolveSegmentUris","segment","baseUri","resolvedUri","updateMaster","playlist","playlists","segments","endList","mediaSequence","mergedPlaylist","createPlaylistID","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","delay","targetDuration","PlaylistLoader","srcUrl","hls","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","startingState","responseText","customParser","addParser","mapper","addTagMapper","manifest","media_","mediaUpdateTimeout","stopRequest","finalRenditionTimeout","oldRequest","onreadystatechange","abort","isFinalRendition","mediaChange","started","backwardDuration","endSequence","precise","forwardDuration","intervalDuration","expired","backward","forward","totalDuration","sumDurations","startIndex","endIndex","durations","safeLiveIndex","liveEdgePadding","lastSegmentDuration","safeDistance","distanceFromEnd","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","scale","pow","ceilLeastSignificantDigit","floorLeastSignificantDigit","getMediaInfoForTime","numSegments","mediaIndex","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","BANDWIDTH","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","byteLength","headers","responseHeaders","timedout","aborted","statusCode","originalAbort","byterangeStr","byterange","byterangeStart","byterangeEnd","segmentXhrHeaders","Range","textRange","range","formatHexString","formatAsciiString","fromCharCode","createTransferableMessage","transferable","ArrayBuffer","isView","bytes","buffer","byteOffset","initSegmentId","initSegment","segmentKeyId","hexDump","step","ascii","tagDump","textRanges","utils","SEGMENT_END_FUDGE_PERCENT","playerTimeToProgramTime","playerTime","dateTimeObject","transmuxerPrependedSeconds","videoTimingInfo","transmuxedStart","transmuxedPresentationStart","startOfSegment","offsetFromSegmentStart","getTime","originalSegmentVideoDuration","transmuxedPresentationEnd","findSegmentForProgramTime","programTime","nextSegmentStart","lastSegmentStart","lastSegmentEnd","estimatedStart","findSegmentForPlayerTime","segmentEnd","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","programDateTime","segmentTimeEpoch","programTimeEpoch","verifyProgramDateTimeTags","getProgramTime","_ref$time","matchedSegment","seekTime","programTimeObject","mediaSeconds","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","mediaOffset","seekToTime","seekedCallback","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","results","findRange","findNextRange","findGaps","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","createTextTracksIfNecessary","sourceBuffer","mediaSource","inbandTextTracks_","trackId","captionStreams","metadataTrack_","inBandMetadataTrackDispatchType","dispatchType","removeCuesFromTrack","deprecateOldCue","frame","privateData","durationOfVideo","dur","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","stream","timestampOffset","videoDuration","mediaSource_","cueTime","frames","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","win","window","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","ShimWorker","forceFallback","objURL","createSourceObject","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","Uint8Array","revokeObjectURL","terminate","createObjectURL","Blob","blob","getBlob","worker","term","TransmuxWorker","document$$1","transmuxerWorker","Stream","init","pipe","destination","flushSource","partialFlush","endTimeline","UINT32_MAX","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","avc1","avcC","btrt","dref","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","vmhd","charCodeAt","payload","view","DataView","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","samples","flags","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","sps","pps","sequenceParameterSets","pictureParameterSets","avc1Box","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","mp4Generator","fileType","movie","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","nalCount","nalUnitType","dts","pts","keyFrame","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","createDefaultSample","sampleForFrame","generateSampleTable","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","totalByteLength","generateSampleTableForFrame","concatenateNalDataForFrame","frameUtils","highPrefix","lowPrefix","zeroFill","count","makeTable","metaTable","silence","silence_1","coneOfSilence","ONE_SECOND_IN_TS","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","sampleRate","timestamp","timelineStartPts","keepOriginalTimestamps","clock","sumFrameByteLengths","array","currentObj","sum","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","silentFrame","firstFrame","ceil","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","generateSampleTable$1","concatenateFrameData","audioFrameUtils","ONE_SECOND_IN_TS$1","collectDtsInfo","timelineStartInfo","maxSegmentPts","maxSegmentDts","clearDtsInfo","calculateTrackBaseMediaDecodeTime","trackDecodeInfo","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","subarray","parseUserData","sei","parseCaptionPackets","userData","ccData","discardEmulationPreventionBytes","emulationPreventionBytesPositions","newLength","newData","sourceIndex","captionPacketParser","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","presortIndex","packet","dispatchCea608Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","MAX_TS","RO_THRESH","TYPE_SHARED","handleRollover","reference","direction","TimestampRolloverStream","lastDTS","referenceDTS","type_","discontinuity","timestampRolloverStream","percentEncode","parseUtf8","decodeURIComponent","parseIso88591","unescape","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","_MetadataStream","MetadataStream","tagSize","bufferSize","chunk","frameStart","frameSize","frameHeader","dataAlignmentIndicator","d","timeStamp","metadataStream","TimestampRolloverStream$1","_TransportPacketStream","_TransportParseStream","_ElementaryStream","MP2T_PACKET_LENGTH","SYNC_BYTE","TransportPacketStream","bytesInBuffer","everything","TransportParseStream","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","sectionLength","tableEnd","programInfoLength","streamType","pid","processPes_","STREAM_TYPES","h264","adts","ElementaryStream","timedMetadata","parsePes","pes","ptsDtsFlags","packetLength","stream$$1","forceFlush","packetData","packetFlushable","fragment","codec","flushStreams_","m2ts","PAT_PID","m2ts_1","ONE_SECOND_IN_TS$2","_AdtsStream","ADTS_SAMPLING_FREQUENCIES","AdtsStream","handlePartialSegments","frameNum","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","getUint32","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","expGolomb","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","NalByteStream","syncPoint","swapBuffer","len","H264Stream","nalByteStream","currentPts","currentDts","readSequenceParameterSet","skipScalingList","expGolombDecoder","lastScale","nextScale","deltaScale","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","aspectRatioIdc","ADTS_SAMPLING_FREQUENCIES$1","isLikelyAacData","parseSyncSafeInteger$1","percentEncode$1","parseIso88591$1","parseId3TagSize","byteIndex","returnSize","footerPresent","parseAdtsSize","lowThree","middle","highTwo","parseType","parseSampleRate","parseAacTimestamp","_AacStream","AacStream","setTimestamp","bytesLeft","tempLength","AUDIO_PROPERTIES","audioProperties","VIDEO_PROPERTIES","videoProperties","isLikelyAacData$1","ONE_SECOND_IN_TS$3","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","arrayEquals","generateVideoSegmentTimingInfo","startDts","endDts","prependedContentDuration","ptsOffsetFromDts","decodeDuration","presentationDuration","AudioSegmentStream","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","VideoSegmentStream","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","halfSecond","allowableOverlap","nearestDistance","dtsDistance","nearestGopObj","currentGopObj","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","CoalesceStream","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","setRemux","Transmuxer","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","hasAudio","hasVideo","setupTsPipeline","packetStream","parseStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","transmuxer","wireTransmuxerEvents","transmuxer$$1","initArray","typedArray","action","gopInfo","videoSegmentTimingInfo","MessageHandlers","setTimestampOffset","appendStart","TransmuxerWorker","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","profileHex","avcLevelHex","parseCodecs","codecCount","parsed","mapLegacyAvcCodecs","codecString","makeMimeTypeString","container","getContainerType","getCodecs","mediaAttributes","CODECS","audioProfileFromDefault","audioGroupId","AUDIO","audioGroup","audioType","mimeTypesForPlaylist","containerType","codecInfo","isMuxed","isMaat","groupId","codecStrings","justAudio","justVideo","bothVideoAudio","parseContentType","parameters","parameter","pair","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","makeWrappedSourceBuffer","mimeType","addSourceBuffer","updating","realBuffer_","get$$1","set$$1","VirtualSourceBuffer","_videojs$EventTarget","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","processPendingSegments_","timingInfo","timingInfoInSeconds","decode","presentation","createRealSourceBuffers_","codecProperty","nativeMediaSource_","shouldTrigger","appendBuffer","sortedSegments","segmentObj","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","originalError","HtmlMediaSource","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","addSeekableRange_","parsedType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","objectUrlPrefix","EventTarget$1$1","mergeOptions$2","updateMaster$1","updateMaster$$1","oldMaster","newMaster","noChanges","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","generateSidxKey","sidxInfo","sidxByteRangeEnd","equivalentSidx","neitherMap","equivalentMap","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","sidx","savedSidxInfo","filterChangedSidxMappings","masterXml","clientOffset","manifestUri","videoSidx","mediaGroupSidx","requestSidx_","sidxRange","finishProcessingFn","sidxRequestOptions","responseType","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","minimumUpdatePeriodTimeout_","mediaRequest_","hasPendingRequest","sidxRequestFinished_","doneFn","parseSidx","sidxMapping","sidxKey","parseMasterXml","masterXml_","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","updatedMaster","mediaID","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","removing","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","disposeFn","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","loaded","handleErrors","handleKeyResponse","errorObj","Uint32Array","handleInitSegmentResponse","captionParser","isInitialized","timescales","timescale","videoTrackIds","handleSegmentResponse","encryptedBytes","fmp4Captions","decryptSegment","decrypter","decryptionHandler","requestId","decrypted","keyBytes","encrypted","iv","waitForCompletion","didError","endOfAllRequests","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","keyRequestOptions","keyRequestCallback","keyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","RESOLUTION","simpleSelector","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","devicePixelRatio","systemBandwidth","minRebufferMaxBandwidthSelector","duration$$1","currentTimeline","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","createCaptionsTrackIfNotExists","inbandTextTracks","addCaptionData","CHECK_BUFFER_DELAY","detectEndOfStream","segmentIndex","appendedLastSegment","finite","isFinite","illegalMediaSwitch","loaderType","startingMedia","newSegmentMedia","containsAudio","containsVideo","safeBackBufferTrimTime","seekable$$1","trimTime","maxTrimTime","segmentInfoString","segmentInfo","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","timeline","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","loaderType_","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","captionParser_","decrypter_","syncController_","syncPoint_","triggerSyncInfoUpdate_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","endOfStream","buffered_","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","setDateTimeMapping","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","resyncLoader","mediaSequenceDiff","saveExpiredSegmentInfo","_mimeType","resetLoader","clearAllCaptions","monitorBufferTick_","fillBuffer_","checkBuffer_","isEndOfStream_","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","abortRequestEarly_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","handleProgress_","simpleSegment","trimBackBuffer_","createSimplifiedSegmentObj_","segmentRequestFinished_","removeToTime","processSegmentResponse_","clearParsedCaptions","handleSegment_","probeSegmentInfo","illegalMediaSwitchError","blacklistDuration","segmentTimestampInfo","ptsStartTime","ptsTime","dtsStartTime","dtsTime","timelineMapping","mappingForTimeline","initId","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","custom","dateTimeString","resolution","uint8ToUtf8","uintArray","escape","VTT_LINE_TERMINATORS","_char2","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","combinedByteLength","combinedSegment","skipEmptySegments_","timestampOffsetForTimeline","checkTimestampOffset","loadHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","cueOut","adOffset","adTotal","_segment$cueOutCont$s","cueOutCont","_segment$cueOutCont$s2","tsprobe","inspect","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentTime","segmentStart","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","compositionStartTime","timeInfo","segmentStartTime","segmentEndTime","probedInfo","accuracy","mediaIndexDiff","Decrypter$1","decrypterWorker","unpad","padded","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt$$1","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","_length","AsyncStream$$1","_Stream","jobs","timeout_","processJob_","job","ntoh","word","initVector","encrypted32","Int32Array","decipher","decrypted32","init0","init1","init2","init3","wordIx","Decrypter$$1","STEP","asyncStream_","decryptChunk_","DecrypterWorker","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","_settings$segmentLoad","segmentLoaders","mainSegmentLoader","mediaTypes","activeTrack","activeGroup","previousActiveLoader","onTrackChanged","_settings$segmentLoad2","onError","blacklistCurrentPlaylist","defaultTrack","SUBTITLES","setupListeners","requestOptions","initialize","_settings$mediaTypes$","groups","variantLabel","_settings$mediaTypes$2","forced","autoselect","CLOSEDCAPTIONS","_settings$mediaTypes$3","instreamId","variants","setupMediaGroups","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_BLACKLIST_SECONDS","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","shouldSwitchToMedia","currentPlaylist","nextPlaylist","forwardBuffer","bufferLowWaterLine","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","onDurationchange","playlistOutdated","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","mediaGroup","onSyncInfoUpdate_","onEndOfStream","mediaSecondsLoaded_","smoothQualityChange_","fastQualityChange_","isEndOfStream","absolutePlaylistEnd","pauseLoading","audioSeekable","suggestedPresentationDelay","mainSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","variantCodecs","enableFunction","loader","playlistID","changePlaylistFn","incompatible","currentlyEnabled","Representation","hlsHandler","mpc","masterPlaylistController_","smoothQualityChange","changeType","qualityChangeFunction","renditionSelectionMixin","representations","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","isAfterSeekableRange","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$1","Hls$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","LOCAL_STORAGE_KEY$1","simpleTypeFromSourceType","dashRE","handleHlsMediaChange","qualityLevels","selectedIndex_","handleHlsLoadedMetadata","addQualityLevel","emeKeySystems","keySystemOptions","audioSegmentLoader","videoMimeType","audioMimeType","parsedMimeType","audioCodec","keySystemContentTypes","videoPlaylist","keySystem","audioContentType","videoContentType","contentProtection","pssh","setupEmeOptions","sourceOptions","source_","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","updateVhsLocalStorage","objectToStore","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","vhs","dash","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","featuresNativeAudioTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","useBandwidthFromLocalStorage","option","playbackWatcher_","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","currentTech","playerDimensions","setupQualityLevels_","qualityLevels_","convertToProgramTime","seekToProgramTime$$1","HlsSourceHandler","_videojs$mergeOptions","supportedType","canUseMsePlayback"],"mappings":"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;;;AAGAxE,EAAAA,EAAE,CAACkE,eAAH,CAAmB,KAAnB;;AAEA,MAAI,OAAOlE,EAAE,CAACouB,IAAV,KAAmB,UAAvB,EAAmC;AACjC;AACA,KAAC,YAAY;AACX,UAAI;AACFpuB,QAAAA,EAAE,CAACouB,IAAH;AACD,OAFD,CAEE,OAAOxlB,CAAP,EAAU,CAAC;AACZ;AACF,KALD;AAMD;AACF,CAzBD;AA0BA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAbA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cA5BA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAzCA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAtDA;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAtEA;AAuEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aApFA,EAoFe3J,OApFf,CAoFuB,UAAUgB,IAAV,EAAgB;AACrC+4C,EAAAA,KAAK,CAACp6C,SAAN,CAAgBqB,IAAhB,IAAwB,YAAY;AAClC,WAAO,KAAKwU,GAAL,CAASxU,IAAT,KAAkB,KAAKwU,GAAL,CAASwQ,YAAT,CAAsBhlB,IAAtB,CAAzB;AACD,GAFD;AAGD,CAxFD,E,CAwFI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAZA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAxBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UApCA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAnDA;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAhEA,EAgEehB,OAhEf,CAgEuB,UAAUgB,IAAV,EAAgB;AACrC+4C,EAAAA,KAAK,CAACp6C,SAAN,CAAgB,QAAQuU,WAAW,CAAClT,IAAD,CAAnC,IAA6C,UAAU0xC,CAAV,EAAa;AACxD,SAAKl9B,GAAL,CAASxU,IAAT,IAAiB0xC,CAAjB;;AAEA,QAAIA,CAAJ,EAAO;AACL,WAAKl9B,GAAL,CAAStS,YAAT,CAAsBlC,IAAtB,EAA4BA,IAA5B;AACD,KAFD,MAEO;AACL,WAAKwU,GAAL,CAASvQ,eAAT,CAAyBjE,IAAzB;AACD;AACF,GARD;AASD,CA1ED,E,CA0EI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAXA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAtBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAlCA;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QA9CA;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QA1DA;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SA5EA;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAzFA;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAtGA;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAlHA;AAmHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OA/HA;AAgIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cA7IA;AA8IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBA9JA;AA+JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBA1KA;AA2KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAtLA;AAuLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAtMA;AAuMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAxNA;AAyNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YApOA;AAqOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAhPA;AAiPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aA7PA,EA6PehB,OA7Pf,CA6PuB,UAAUgB,IAAV,EAAgB;AACrC+4C,EAAAA,KAAK,CAACp6C,SAAN,CAAgBqB,IAAhB,IAAwB,YAAY;AAClC,WAAO,KAAKwU,GAAL,CAASxU,IAAT,CAAP;AACD,GAFD;AAGD,CAjQD,E,CAiQI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAZA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAvBA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAnCA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SArDA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAnEA;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBApFA;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBA/FA;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aA5GA,EA4GehB,OA5Gf,CA4GuB,UAAUgB,IAAV,EAAgB;AACrC+4C,EAAAA,KAAK,CAACp6C,SAAN,CAAgB,QAAQuU,WAAW,CAAClT,IAAD,CAAnC,IAA6C,UAAU0xC,CAAV,EAAa;AACxD,SAAKl9B,GAAL,CAASxU,IAAT,IAAiB0xC,CAAjB;AACD,GAFD;AAGD,CAhHD,E,CAgHI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OARA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAhBA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAxBA,EAwBQ1yC,OAxBR,CAwBgB,UAAUgB,IAAV,EAAgB;AAC9B+4C,EAAAA,KAAK,CAACp6C,SAAN,CAAgBqB,IAAhB,IAAwB,YAAY;AAClC,WAAO,KAAKwU,GAAL,CAASxU,IAAT,GAAP;AACD,GAFD;AAGD,CA5BD;AA6BA2X,IAAI,CAACsc,kBAAL,CAAwB8kB,KAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,KAAK,CAACjkB,mBAAN,GAA4B,EAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAikB,KAAK,CAACjkB,mBAAN,CAA0BzB,WAA1B,GAAwC,UAAU13B,IAAV,EAAgB;AACtD;AACA,MAAI;AACF,WAAOo9C,KAAK,CAACuE,QAAN,CAAejqB,WAAf,CAA2B13B,IAA3B,CAAP;AACD,GAFD,CAEE,OAAOgN,CAAP,EAAU;AACV,WAAO,EAAP;AACD;AACF,CAPD;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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AA,QAAQ,CAACE,MAAT,GAAkBJ,UAAlB;AACD,GA1BuD,CA0BtD;;;AAGF,OAAK,IAAIt2D,IAAT,IAAiBy2D,OAAjB,EAA0B;AACxB,QAAIA,OAAO,CAACx0D,cAAR,CAAuBjC,IAAvB,CAAJ,EAAkC;AAChCw2D,MAAAA,QAAQ,CAACtzD,SAAT,CAAmBlD,IAAnB,IAA2By2D,OAAO,CAACz2D,IAAD,CAAlC;AACD;AACF;;AAED,SAAOw2D,QAAP;AACD,CApCD;AAsCA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIG,WAAW,GAAG,SAASA,WAAT,CAAqB99C,EAArB,EAAyB;AACzC,SAAOA,EAAE,CAAC7T,OAAH,CAAW,GAAX,MAAoB,CAApB,GAAwB6T,EAAE,CAAChM,KAAH,CAAS,CAAT,CAAxB,GAAsCgM,EAA7C;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAAS+9C,SAAT,CAAmB/9C,EAAnB,EAAuBlM,OAAvB,EAAgC2L,KAAhC,EAAuC;AACrC,MAAIlL,MAAM,GAAGwpD,SAAS,CAACC,SAAV,CAAoBh+C,EAApB,CAAb;;AAEA,MAAIzL,MAAJ,EAAY;AACV,QAAIT,OAAJ,EAAa;AACX1M,MAAAA,GAAG,CAAC6B,IAAJ,CAAS,cAAc+W,EAAd,GAAmB,yDAA5B;AACD;;AAED,QAAIP,KAAJ,EAAW;AACTlL,MAAAA,MAAM,CAACkL,KAA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","sourcesContent":["/**\n * @license\n * Video.js 7.9.7 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport '@babel/runtime/helpers/possibleConstructorReturn';\nimport '@babel/runtime/helpers/getPrototypeOf';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _construct from '@babel/runtime/helpers/construct';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport CaptionParser from 'mux.js/lib/mp4/caption-parser';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.9.7\";\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args)); // only store 1000 history entries\n\n      var splice = history.length - 1000;\n      history.splice(0, splice > 0 ? splice : 0);\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return _extends.apply(void 0, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var computedStyleValue = window$1.getComputedStyle(el);\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n\n  return '';\n}\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val) {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  var width = el.offsetWidth;\n  var height = el.offsetHeight;\n  var left = 0;\n  var top = 0;\n\n  do {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  } while (el);\n\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var boxTarget = findPosition(event.target);\n  var box = findPosition(el);\n  var boxW = box.width;\n  var boxH = box.height;\n  var offsetY = event.offsetY - (box.top - boxTarget.top);\n  var offsetX = event.offsetX - (box.left - boxTarget.left);\n\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n  }\n\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\n\n\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\n\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file guid.js\n * @module guid\n */\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nvar _initialGuid = 3;\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\n\nvar _guid = _initialGuid;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\nvar FakeWeakMap;\n\nif (!window$1.WeakMap) {\n  FakeWeakMap = /*#__PURE__*/function () {\n    function FakeWeakMap() {\n      this.vdata = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n      this.data = {};\n    }\n\n    var _proto = FakeWeakMap.prototype;\n\n    _proto.set = function set(key, value) {\n      var access = key[this.vdata] || newGUID();\n\n      if (!key[this.vdata]) {\n        key[this.vdata] = access;\n      }\n\n      this.data[access] = value;\n      return this;\n    };\n\n    _proto.get = function get(key) {\n      var access = key[this.vdata]; // we have data, return it\n\n      if (access) {\n        return this.data[access];\n      } // we don't have data, return nothing.\n      // return undefined explicitly as that's the contract for this method\n\n\n      log('We have no data for this element', key);\n      return undefined;\n    };\n\n    _proto.has = function has(key) {\n      var access = key[this.vdata];\n      return access in this.data;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var access = key[this.vdata];\n\n      if (access) {\n        delete this.data[access];\n        delete key[this.vdata];\n      }\n    };\n\n    return FakeWeakMap;\n  }();\n}\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar DomData = window$1.WeakMap ? new WeakMap() : new FakeWeakMap();\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData[\"delete\"](elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true; // Returns fixed-up instance\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive;\n\nvar supportsPassive = function supportsPassive() {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {// disregard\n    }\n  }\n\n  return _supportsPassive;\n};\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n\n  var data = DomData.get(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n\n    var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = fn.bind(context); // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file string-cases.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nvar toLowerCase = function toLowerCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toLowerCase();\n  });\n};\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\nvar toTitleCase = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nvar titleCaseEquals = function titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n};\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\nvar MapSham = /*#__PURE__*/function () {\n  function MapSham() {\n    this.map_ = {};\n  }\n\n  var _proto = MapSham.prototype;\n\n  _proto.has = function has(key) {\n    return key in this.map_;\n  };\n\n  _proto[\"delete\"] = function _delete(key) {\n    var has = this.has(key);\n    delete this.map_[key];\n    return has;\n  };\n\n  _proto.set = function set(key, value) {\n    this.set_[key] = value;\n    return this;\n  };\n\n  _proto.forEach = function forEach(callback, thisArg) {\n    for (var key in this.map_) {\n      callback.call(thisArg, this.map_[key], key, this);\n    }\n  };\n\n  return MapSham;\n}();\n\nvar Map$1 = window$1.Map ? window$1.Map : MapSham;\n\nvar SetSham = /*#__PURE__*/function () {\n  function SetSham() {\n    this.set_ = {};\n  }\n\n  var _proto = SetSham.prototype;\n\n  _proto.has = function has(key) {\n    return key in this.set_;\n  };\n\n  _proto[\"delete\"] = function _delete(key) {\n    var has = this.has(key);\n    delete this.set_[key];\n    return has;\n  };\n\n  _proto.add = function add(key) {\n    this.set_[key] = 1;\n    return this;\n  };\n\n  _proto.forEach = function forEach(callback, thisArg) {\n    for (var key in this.set_) {\n      callback.call(thisArg, key, key, this);\n    }\n  };\n\n  return SetSham;\n}();\n\nvar Set = window$1.Set ? window$1.Set : SetSham;\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = /*#__PURE__*/function () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map$1();\n    this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n\n\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true; // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      if (DomData.has(this.el_)) {\n        DomData[\"delete\"](this.el_);\n      }\n\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  ;\n\n  _proto.isDisposed = function isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  ;\n\n  _proto.getDescendant = function getDescendant() {\n    for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\n      names[_key] = arguments[_key];\n    }\n\n    // flatten array argument into the main array\n    names = names.reduce(function (acc, n) {\n      return acc.concat(n);\n    }, []);\n    var currentChild = this;\n\n    for (var i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n\n    return currentChild;\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      var refNode = null;\n\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(function () {\n      if (_this2.setTimeoutIds_.has(timeoutId)) {\n        _this2.setTimeoutIds_[\"delete\"](timeoutId);\n      }\n\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_[\"delete\"](timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    var intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_[\"delete\"](intervalId);\n      window$1.clearInterval(intervalId);\n    }\n\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this3 = this;\n\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.setTimeout(fn, 1000 / 60);\n    }\n\n    this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n    var id;\n    fn = bind(this, fn);\n    id = window$1.requestAnimationFrame(function () {\n      if (_this3.rafIds_.has(id)) {\n        _this3.rafIds_[\"delete\"](id);\n      }\n\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  ;\n\n  _proto.requestNamedAnimationFrame = function requestNamedAnimationFrame(name, fn) {\n    var _this4 = this;\n\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n\n    this.clearTimersOnDispose_();\n    fn = bind(this, fn);\n    var id = this.requestAnimationFrame(function () {\n      fn();\n\n      if (_this4.namedRafs_.has(name)) {\n        _this4.namedRafs_[\"delete\"](name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  ;\n\n  _proto.cancelNamedAnimationFrame = function cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_[\"delete\"](name);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.clearTimeout(id);\n    }\n\n    if (this.rafIds_.has(id)) {\n      this.rafIds_[\"delete\"](id);\n      window$1.cancelAnimationFrame(id);\n    }\n\n    return id;\n  }\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  ;\n\n  _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n    var _this5 = this;\n\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', function () {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n        var idName = _ref[0],\n            cancelName = _ref[1];\n\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        _this5[idName].forEach(function (val, key) {\n          return _this5[cancelName](key);\n        });\n      });\n      _this5.clearingTimersOnDispose_ = false;\n    });\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    Component.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name || !Component.components_) {\n      return;\n    }\n\n    return Component.components_[name];\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edg/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IS_IPOD: IS_IPOD,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url, winLoc) {\n  if (winLoc === void 0) {\n    winLoc = window$1.location;\n  }\n\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  var withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n          if (event.type === 'vttjserror') {\n            log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n            return;\n          }\n\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    _this.preload_ = _this.tech_.preloadTextTracks !== false;\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n\n      if (!_this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        _this.loaded_ = true;\n      }\n\n      if (_this.preload_ || default_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(_this.src, _assertThisInitialized(_this));\n      }\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = _extends({}, NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.preloadTextTracks = options.preloadTextTracks !== false;\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  ;\n\n  _proto.crossOrigin = function crossOrigin() {}\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  ;\n\n  _proto.setCrossOrigin = function setCrossOrigin() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#setScrubbing}\n   */\n  ;\n\n  _proto.setScrubbing = function setScrubbing() {}\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.disablePictureInPicture = function disablePictureInPicture() {\n    return true;\n  }\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setDisablePictureInPicture = function setDisablePictureInPicture() {}\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    name = toTitleCase(name);\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  if (!src.type) {\n    var mimetype = getMimetype(src.src);\n\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off('mouseover', this.handleMouseOver);\n    this.off('mouseout', this.handleMouseOut);\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n\n    if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n    // calling .focus() on the video element causes the video to go black,\n    // so we avoid it in that specific case\n    !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n      // calling .focus() on the video element causes the video to go black,\n      // so we avoid it in that specific case\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['timeupdate', 'ended'], _this.updateContent);\n\n    _this.updateTextNode_();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_(time) {\n    var _this2 = this;\n\n    if (time === void 0) {\n      time = 0;\n    }\n\n    time = formatTime(time);\n\n    if (this.formattedTime_ === time) {\n      return;\n    }\n\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', function () {\n      if (!_this2.contentEl_) {\n        return;\n      }\n\n      var oldNode = _this2.textNode_;\n      _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\n\n      if (!_this2.textNode_) {\n        return;\n      }\n\n      if (oldNode) {\n        _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\n      } else {\n        _this2.contentEl_.appendChild(_this2.textNode_);\n      }\n    });\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  function CurrentTimeDisplay() {\n    return _TimeDisplay.apply(this, arguments) || this;\n  }\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time;\n\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n\n    var time; // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nvar clamp = function clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n};\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick); // TODO: deprecated, controlsvisible does not seem to be fired\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    var _this2 = this;\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    } // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n\n\n    var progress = this.getProgress();\n\n    if (progress === this.progress_) {\n      return progress;\n    }\n\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', function () {\n      // Set the new bar width or height\n      var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\n\n      _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  ;\n\n  _proto.getProgress = function getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\nvar percentify = function percentify(time, end) {\n  return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n};\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\n\nvar LoadProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress'\n    });\n\n    var wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    var loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    var separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('LoadProgressBar#update', function () {\n      var liveTracker = _this2.player_.liveTracker;\n\n      var buffered = _this2.player_.buffered();\n\n      var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\n\n      var bufferedEnd = _this2.player_.bufferedEnd();\n\n      var children = _this2.partEls_;\n      var percent = percentify(bufferedEnd, duration);\n\n      if (_this2.percent_ !== percent) {\n        // update the width of the progress bar\n        _this2.el_.style.width = percent; // update the control-text\n\n        textContent(_this2.percentageEl_, percent);\n        _this2.percent_ = percent;\n      } // add child elements to represent the individual buffered time ranges\n\n\n      for (var i = 0; i < buffered.length; i++) {\n        var start = buffered.start(i);\n        var end = buffered.end(i);\n        var part = children[i];\n\n        if (!part) {\n          part = _this2.el_.appendChild(createEl());\n          children[i] = part;\n        } //  only update if changed\n\n\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n\n        part.dataset.start = start;\n        part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\n\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      } // remove unused buffered range elements\n\n\n      for (var _i = children.length; _i > buffered.length; _i--) {\n        _this2.el_.removeChild(children[_i - 1]);\n      }\n\n      children.length = buffered.length;\n    });\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = findPosition(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', function () {\n      var content;\n\n      var duration = _this2.player_.duration();\n\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n        var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this2.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlayProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update_ = bind(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.update();\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n\n    if (!this.updateInterval) {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.requestNamedAnimationFrame('SeekBar#update', function () {\n      var currentTime = _this2.player_.ended() ? _this2.player_.duration() : _this2.getCurrentTime_();\n      var liveTracker = _this2.player_.liveTracker;\n\n      var duration = _this2.player_.duration();\n\n      if (liveTracker && liveTracker.isLive()) {\n        duration = _this2.player_.liveTracker.liveCurrentTime();\n      }\n\n      if (_this2.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        _this2.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n        _this2.percent_ = percent;\n      }\n\n      if (_this2.currentTime_ !== currentTime || _this2.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        _this2.el_.setAttribute('aria-valuetext', _this2.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n        _this2.currentTime_ = currentTime;\n        _this2.duration_ = duration;\n      } // update the progress bar time tooltip with the current time\n\n\n      if (_this2.bar) {\n        _this2.bar.update(getBoundingClientRect(_this2.el()), _this2.getProgress());\n      }\n    });\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    this.off(this.player_, ['playing'], this.enableInterval_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n\n    _Slider.prototype.dispose.call(this);\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (!seekBar) {\n      return;\n    }\n\n    var playProgressBar = seekBar.getChild('playProgressBar');\n    var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n\n    var seekBarEl = seekBar.el();\n    var seekBarRect = findPosition(seekBarEl);\n    var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange);\n\n    _this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], _this.handlePictureInPictureEnabledChange); // TODO: Deactivate button on player emptied event.\n\n\n    _this.disable();\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enables or disables button based on document.pictureInPictureEnabled property value\n   * or on value returned by player.disablePictureInPicture() method.\n   */\n  ;\n\n  _proto.handlePictureInPictureEnabledChange = function handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n\n    this.handlePictureInPictureEnabledChange();\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    _this.on(_this.muteToggle, 'keyup', _this.handleKeyPress);\n\n    _this.on(_this.volumeControl, 'keyup', _this.handleVolumeControlKeyUp);\n\n    _this.on('keydown', _this.handleKeyPress);\n\n    _this.on('mouseover', _this.handleMouseOver);\n\n    _this.on('mouseout', _this.handleMouseOut); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseOut();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  ;\n\n  _proto.handleMouseOver = function handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  ;\n\n  _proto.handleMouseOut = function handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.addClass('vjs-hover');\n\n      _this.menu.show();\n\n      on(document, 'keyup', bind(_assertThisInitialized(_this), _this.handleMenuKeyUp));\n    });\n\n    _this.on('mouseleave', _this.handleMouseLeave);\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseLeave();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  ;\n\n  _proto.handleMouseLeave = function handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleMenuKeyUp));\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = /*#__PURE__*/function (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = _extends({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\nvar defaults = {\n  trackingThreshold: 30,\n  liveTolerance: 15\n};\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\n\nvar LiveTracker = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=30]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect wether we are live or not.\n   */\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions(defaults, options, {\n      createEl: false\n    });\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n  /**\n   * toggle tracking based on document visiblility\n   */\n\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  }\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newTime = Number(window$1.performance.now().toFixed(4));\n    var deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime(); // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n\n    var isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance; // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android\n\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLive_);\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked);\n    }\n  }\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  ;\n\n  _proto.handleFirstTimeupdate = function handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked);\n  }\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked() {\n    var timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.skipNextSeeked_ ? false : timeDiff > 2;\n    this.skipNextSeeked_ = false;\n    this.trackLive_();\n  }\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.skipNextSeeked_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLive_);\n    this.off(this.player_, 'seeked', this.handleSeeked);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Wether liveTracker is tracking\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Wether playback is at the live edge\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * The number of seconds that have occured after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    var seekableEnd = this.seekableEnd();\n\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n  /**\n   * Wether live tracker is currently tracking or not.\n   */\n  ;\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n\n    if (this.atLiveEdge()) {\n      return;\n    } // skipNextSeeked_\n\n\n    this.skipNextSeeked_ = true;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n  /**\n   * Dispose of liveTracker\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.off(document, 'visibilitychange', this.handleVisibilityChange);\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter wether a setter shoould be allowed or not\n */\nvar defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n  if (setter === void 0) {\n    setter = true;\n  }\n\n  var set = function set(value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      writable: true\n    });\n  };\n\n  var options = {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var value = getValue();\n      set(value);\n      return value;\n    }\n  };\n\n  if (setter) {\n    options.set = set;\n  }\n\n  return Object.defineProperty(obj, key, options);\n};\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = /*#__PURE__*/function (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        var event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event); // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n\n        if (name === 'text') {\n          _this3[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  ;\n\n  _proto.setScrubbing = function setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play()); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\n\n\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n\n  var video = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\n[['featuresVolumeControl', 'canControlVolume'], ['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\n  var key = _ref[0],\n      fn = _ref[1];\n  defineLazyProperty(Html5.prototype, key, function () {\n    return Html5[fn]();\n  }, true);\n});\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true; // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  if (canPlayType) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  }\n\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // default isFullscreen_ to false\n\n    _this.isFullscreen_ = false; // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // Init debugEnabled_\n\n    _this.debugEnabled_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    }); // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n\n    if (_this.fsApi_.requestFullscreen) {\n      on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n\n      _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n    }\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    } // Enable debug mode to fire debugon event for all plugins.\n\n\n    if (options.debug) {\n      _this.debug(true);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        try {\n          tag[k] = el[k];\n        } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.crossOrigin = function crossOrigin(value) {\n    if (!value) {\n      return this.techGet_('crossOrigin');\n    }\n\n    if (value !== 'anonymous' && value !== 'use-credentials') {\n      log.warn(\"crossOrigin must be \\\"anonymous\\\" or \\\"use-credentials\\\", given \\\"\" + value + \"\\\"\");\n      return;\n    }\n\n    this.techCall_('setCrossOrigin', value);\n    return;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'fullscreenerror', this.handleTechFullscreenError_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the initial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], function (e) {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n\n          var techSrc = _this6.techGet('currentSrc');\n\n          _this6.lastSource_.tech = techSrc;\n\n          _this6.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var targetPlayer = e.target.player; // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs);\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.toggleClass('vjs-ios-native-fs');\n      }\n\n      this.isFullscreen(data.isFullscreen);\n    }\n  };\n\n  _proto.handleTechFullscreenError_ = function handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.applyInitTime_);\n        this.one('canplay', this.applyInitTime_);\n        return;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  ;\n\n  _proto.applyInitTime_ = function applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      var oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {EventTarget~Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.requestFullscreenHelper_(fullscreenOptions);\n\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          return promise;\n        }\n      });\n    }\n\n    return this.requestFullscreenHelper_();\n  };\n\n  _proto.requestFullscreenHelper_ = function requestFullscreenHelper_(fullscreenOptions) {\n    var _this10 = this;\n\n    var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    } // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      if (promise) {\n        promise.then(function () {\n          return _this10.isFullscreen(true);\n        }, function () {\n          return _this10.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.exitFullscreenHelper_();\n\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          return promise;\n        }\n      });\n    }\n\n    return this.exitFullscreenHelper_();\n  };\n\n  _proto.exitFullscreenHelper_ = function exitFullscreenHelper_() {\n    var _this11 = this;\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = document[this.fsApi_.exitFullscreen]();\n\n      if (promise) {\n        promise.then(function () {\n          return _this11.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Disable Picture-in-Picture mode.\n   *\n   * @param {boolean} value\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  ;\n\n  _proto.disablePictureInPicture = function disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n      if (el.isContentEditable) {\n        return true;\n      } // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      } // The final test is by tag name. These tags will be excluded entirely.\n\n\n      var excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this12 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this12.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this13 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // initial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this13.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this13.cache_.sources = sources;\n\n      _this13.updateSourceCaches_(middlewareSource);\n\n      var err = _this13.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this13.src(sources.slice(1));\n        }\n\n        _this13.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this13.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this13.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this13.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this14 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this14.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this15 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this15.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   * When manualCleanup is set to false, the track will be automatically removed\n   * on source changes.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *                                       removed on a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this16 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this16.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this17 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this17.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  }\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   */\n  ;\n\n  _proto.debug = function debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\n\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    } // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\n\n\n  if (superClass) {\n    subClass.super_ = superClass;\n  } // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\nvideojs$1.defineLazyProperty = defineLazyProperty;\n\n/**\n * @videojs/http-streaming\n * @version 1.13.4\n * @copyright 2020 Brightcove, Inc\n * @license Apache-2.0\n */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.id];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === media.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar createPlaylistID = function createPlaylistID(index, uri) {\n  return index + '-' + uri;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = createPlaylistID(i, playlist.uri);\n    master.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    master.playlists[playlist.uri] = playlist;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media(), 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri, _this.media().id);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, playlist, startingState) {\n      var uri = playlist.uri,\n          id = playlist.id; // any in-flight request is now finished\n\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[id],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + uri + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url, id) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url;\n      parser.manifest.id = id; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[id];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n      this.off();\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.id].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri, playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        }\n\n        var id = createPlaylistID(0, _this5.srcUrl); // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: id,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[id] = _this5.master.playlists[0]; // URI reference added for backwards compatibility\n\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl, id);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * A liveEdgePadding can be provided which will be used instead of calculating the safe live edge.\n * This corresponds to suggestedPresentationDelay in DASH manifests.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @param {Number} [liveEdgePadding]\n *        A number in seconds indicating how far from the end we want to be.\n *        If provided, this value is used instead of calculating the safe live index from the target durations.\n *        Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist, liveEdgePadding) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length;\n  var lastSegmentDuration = playlist.segments[i - 1].duration || playlist.targetDuration;\n  var safeDistance = typeof liveEdgePadding === 'number' ? liveEdgePadding : lastSegmentDuration + playlist.targetDuration * 2;\n\n  if (safeDistance === 0) {\n    return i;\n  }\n\n  var distanceFromEnd = 0;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {Number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist, liveEdgePadding) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired, liveEdgePadding) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    Stream.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n\n    Stream.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n\n    Stream.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i,\n            avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length], // numOfSequenceParameterSets\n        sequenceParameterSets, // \"SPS\"\n        [pps.length], // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n              vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n\n        return box.apply(null, avc1Box);\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytesOffest, bytes, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 16);\n        bytes.set(header);\n        bytesOffest = header.length;\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n          bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n          bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n        }\n\n        return box(types.trun, bytes);\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, bytesOffest, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 8);\n        bytes.set(header);\n        bytesOffest = header.length;\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n        }\n\n        return box(types.trun, bytes);\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    }; // generate the track's sample table from a frame\n\n\n    var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n      var sample,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n\n    var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n      var i,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = frame.byteLength,\n          numberOfNals = frame.length,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    var silence;\n\n    var silence_1 = function silence_1() {\n      if (!silence) {\n        // Frames-of-silence to use for filling in missing AAC frames\n        var coneOfSilence = {\n          96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n          88200: [highPrefix, [231], zeroFill(170), [56]],\n          64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n          48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n          44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n          32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n          24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n          16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n          12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n          11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n          8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n        };\n        silence = makeTable(coneOfSilence);\n      }\n\n      return silence;\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs,\n        metadataTsToSeconds;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n\n    metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n\n    var clock = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i,\n          firstFrame;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n\n      silentFrame = silence_1()[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n\n    CaptionStream.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n\n    CaptionStream.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n\n    CaptionStream.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n\n      this.push = function (data) {\n        // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          programMapTable,\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n\n      this.flush = function () {\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n    var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream(handlePartialSegments) {\n      var buffer,\n          frameNum = 0;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n          frameNum++; // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          } // Remove the finished frame from the buffer and start the process again\n\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          sarRatio: sarRatio\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var audioProperties = AUDIO_PROPERTIES;\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n    var videoProperties = VIDEO_PROPERTIES;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          audioProperties.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$3 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          this.trigger('timingInfo', {\n            start: frames[0].pts,\n            end: frames[0].pts + frames.length * frameDuration\n          });\n        }\n\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          videoProperties.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].pts,\n          end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        videoProperties.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        audioProperties.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n\n    _CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n          var baseMediaDecodeTime = !options.keepOriginalTimestamps ? self.baseMediaDecodeTime : 0;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n                // because this is a particularly subtle form of timestamp alteration.\n                if (audioTrack && !options.keepOriginalTimestamps) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n        }\n\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: audioProperties,\n      VIDEO_PROPERTIES: videoProperties,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer$$1) {\n      transmuxer$$1.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer$$1.captionStream) {\n        transmuxer$$1.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer$$1.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer$$1.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer$$1.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new transmuxer.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      if (!this.pendingBuffers_.length) {\n        // We are no longer in the internal \"updating\" state\n        this.trigger('updateend');\n        this.bufferUpdating_ = false;\n        return;\n      } // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.transmuxer_) {\n        this.transmuxer_.terminate();\n      }\n\n      this.trigger('dispose');\n      this.off();\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.off();\n      this.sourceBuffers.forEach(function (buffer) {\n        if (buffer.dispose) {\n          buffer.dispose();\n        }\n      });\n      this.sourceBuffers.length = 0;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var id = properties.playlists[0].id;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var id in playlists) {\n    var playlist = playlists[id];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().id);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.off();\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.id]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.id] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri;\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          var id = createPlaylistID(0, _phonyUri);\n          properties.playlists[0].uri = _phonyUri;\n          properties.playlists[0].id = id; // setup ID and URI references (URI for backwards compatibility)\n\n          master.playlists[id] = properties.playlists[0];\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        var currentSidxInfo = _this8.media().sidx;\n\n        if (updatedMaster) {\n          if (currentSidxInfo) {\n            var sidxKey = generateSidxKey(currentSidxInfo); // the sidx was updated, so the previous mapping was removed\n\n            if (!_this8.sidxMapping_[sidxKey]) {\n              var playlist = _this8.media();\n\n              _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n                handleManifestRedirects: _this8.handleManifestRedirects\n              }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n                if (!newMaster || !sidx) {\n                  throw new Error('failed to request sidx on minimumUpdatePeriod');\n                } // update loader's sidxMapping with parsed sidx box\n\n\n                _this8.sidxMapping_[sidxKey].sidx = sidx;\n                _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                  _this8.trigger('minimumUpdatePeriod');\n                }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n                _this8.refreshMedia_(_this8.media().id);\n\n                return;\n              }));\n            }\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaID) {\n      var _this9 = this;\n\n      if (!mediaID) {\n        throw new Error('refreshMedia_ must take a media id');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaID];\n      } else {\n        this.media_ = newMaster.playlists[mediaID];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {Number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  var pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  var trimTime = currentTime - 30;\n\n  if (seekable$$1.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable$$1.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n\n  var maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.triggerSyncInfoUpdate_ = function () {\n      return _this.trigger('syncinfoupdate');\n    };\n\n    _this.syncController_.on('syncinfoupdate', _this.triggerSyncInfoUpdate_);\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n        this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n      }\n\n      this.off();\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      //\n      // Use the INIT state to determine if playback has started, as the playlist sync info\n      // should be fixed once requests begin (as sync points are generated based on sync\n      // info), but not before then.\n\n      if (this.state === 'INIT') {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n      // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n      // we then clamp the value to duration if necessary.\n\n      this.remove(0, Infinity, done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      // clamp end to duration if we need to remove everything.\n      // This is due to a browser bug that causes issues if we remove to Infinity.\n      // videojs/videojs-contrib-hls#1225\n      if (end === Infinity) {\n        end = this.duration_();\n      }\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n        startOfSegment = lastBufferedEnd;\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        // Subtract any difference between the PTS and DTS times of the first frame\n        // from the timeStampOffset (which currently equals the buffered.end) to prevent\n        // creating any gaps in the buffer\n        if (timingInfo && timingInfo.segmentTimestampInfo) {\n          var ptsStartTime = timingInfo.segmentTimestampInfo[0].ptsTime;\n          var dtsStartTime = timingInfo.segmentTimestampInfo[0].dtsTime;\n          segmentInfo.timestampOffset -= ptsStartTime - dtsStartTime;\n        }\n\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.id,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    _this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(_this3.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 segment to determine the start of the segment\n     * in it's internal \"composition time\", which is equal to the base\n     * media decode time plus the composition time offset value\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"composition time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment; // get timescales from init segment\n\n      var timescales = mp4probe.timescale(segment.map.bytes); // calculate composition start time using the timescales and information\n      // contained within the media segment\n\n      var compositionStartTime = mp4probe.compositionStartTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= compositionStartTime;\n      }\n\n      return {\n        start: compositionStartTime,\n        end: compositionStartTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n      var segmentTimestampInfo = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n        segmentTimestampInfo = timeInfo.video;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n        segmentTimestampInfo = timeInfo.audio;\n      }\n\n      var probedInfo = {\n        segmentTimestampInfo: segmentTimestampInfo,\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.trigger('dispose');\n      this.off();\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\nvar shouldSwitchToMedia = function shouldSwitchToMedia(_ref) {\n  var currentPlaylist = _ref.currentPlaylist,\n      nextPlaylist = _ref.nextPlaylist,\n      forwardBuffer = _ref.forwardBuffer,\n      bufferLowWaterLine = _ref.bufferLowWaterLine,\n      duration$$1 = _ref.duration,\n      log = _ref.log; // we have no other playlist to switch to\n\n  if (!nextPlaylist) {\n    videojs$1.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  } // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n\n  if (!currentPlaylist.endList) {\n    return true;\n  } // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n\n  if (duration$$1 < Config.MAX_BUFFER_LOW_WATER_LINE) {\n    return true;\n  } // we want to switch down to lower resolutions quickly to continue playback, but\n\n\n  if (nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH) {\n    return true;\n  } // ensure we have some buffer before we switch up to prevent us running out of\n  // buffer while loading a higher rendition.\n\n\n  if (forwardBuffer >= bufferLowWaterLine) {\n    return true;\n  }\n\n  return false;\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        cacheEncryptionKeys = options.cacheEncryptionKeys,\n        sourceType = options.sourceType;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n    _this.hasPlayed_ = false;\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_;\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: _this.tech_.featuresNativeTextTracks\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine();\n\n        if (shouldSwitchToMedia({\n          currentPlaylist: currentPlaylist,\n          nextPlaylist: nextPlaylist,\n          forwardBuffer: forwardBuffer,\n          bufferLowWaterLine: bufferLowWaterLine,\n          duration: _this3.duration(),\n          log: _this3.logger_\n        })) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n\n      if (this.hasPlayed_) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.tech_.setCurrentTime(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.tech_.setCurrentTime(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = true;\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.tech_.setCurrentTime(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      var suggestedPresentationDelay = this.masterPlaylistLoader_.master.suggestedPresentationDelay;\n      var mainSeekable = Hls.Playlist.seekable(media, expired, suggestedPresentationDelay);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired, suggestedPresentationDelay);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.trigger('dispose');\n\n      if (this.decrypter_) {\n        this.decrypter_.terminate();\n      }\n\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n      this.off();\n\n      if (this.mediaSource.dispose) {\n        this.mediaSource.dispose();\n      }\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistID, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistID];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.id, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    if (!playlists || !playlists.master || !playlists.master.playlists) {\n      return [];\n    }\n\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.id);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.13.4\";\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, mainSegmentLoader, audioSegmentLoader) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  var videoMimeType = void 0;\n  var audioMimeType = void 0; // if there is a mimeType associated with the audioSegmentLoader, then the audio\n  // and video mimeType and codec strings are already in the format we need to\n  // pass with the other key systems\n\n  if (audioSegmentLoader.mimeType_) {\n    videoMimeType = mainSegmentLoader.mimeType_;\n    audioMimeType = audioSegmentLoader.mimeType_; // if there is no audioSegmentLoader mimeType, then we have to create the\n    // the audio and video mimeType/codec strings from information extrapolated\n    // from the mainSegmentLoader mimeType (ex. 'video/mp4; codecs=\"mp4, avc1\"' -->\n    // 'video/mp4; codecs=\"avc1\"' and 'audio/mp4; codecs=\"mp4\"')\n  } else {\n    var parsedMimeType = parseContentType(mainSegmentLoader.mimeType_);\n    var codecs = parsedMimeType.parameters.codecs.split(',');\n    var audioCodec = void 0;\n    var videoCodec = void 0;\n    codecs.forEach(function (codec) {\n      codec = codec.trim();\n\n      if (isAudioCodec(codec)) {\n        audioCodec = codec;\n      } else if (isVideoCodec(codec)) {\n        videoCodec = codec;\n      }\n    });\n    videoMimeType = parsedMimeType.type + '; codecs=\"' + videoCodec + '\"';\n    audioMimeType = parsedMimeType.type.replace('video', 'audio') + '; codecs=\"' + audioCodec + '\"';\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n  var videoPlaylist = mainSegmentLoader.playlist_;\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: audioMimeType,\n      videoContentType: videoMimeType\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  var mainSegmentLoader = hlsHandler.masterPlaylistController_.mainSegmentLoader_;\n  var audioSegmentLoader = hlsHandler.masterPlaylistController_.audioSegmentLoader_;\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, mainSegmentLoader, audioSegmentLoader);\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n      // in non-IE11 browsers. In IE11 this is too early to initialize media keys\n\n      if (!(videojs$1.browser.IE_VERSION === 11) && player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.ignoreNextSeekingEvent_ = false;\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    });\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n      this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      }); // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n      this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n      // or qualityLevels_ listeners have already been setup, do nothing.\n\n      if (!player || !player.qualityLevels || this.qualityLevels_) {\n        return;\n      }\n\n      this.qualityLevels_ = player.qualityLevels();\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n      });\n      this.playlists.on('mediachange', function () {\n        handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n      });\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n"]},"metadata":{},"sourceType":"module"}