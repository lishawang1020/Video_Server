{"ast":null,"code":"var _jsxFileName = \"/Users/lisa/Desktop/Github_Profile/Video_Server/client/src/components/Upload/Upload.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Redirect } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Upload.css';\nimport Navbar from '../Navbar/Navbar';\n\nclass Upload extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedVideos: null,\n      loaded: 0\n    };\n  }\n\n  maxSelectFile(event) {\n    let files = event.target.files;\n\n    if (files.length > 1) {\n      toast.error('Maximum 1 file is allowed');\n      event.target.value = null;\n      return false;\n    } else {\n      let err = '';\n\n      for (let i = 0; i < files.length; i++) {\n        if (files[i].size > 52428800) {\n          // 50 MB\n          err += files[i].name + ', ';\n        }\n      }\n\n      if (err !== '') {\n        // error caught\n        event.target.value = null;\n        toast.error(err + \" is/are too large. Please select file size < 50Mb\");\n      }\n    }\n\n    return true;\n  }\n\n  fileChangeHandler(event) {\n    const files = event.target.files;\n\n    if (this.maxSelectFile(event)) {\n      this.setState({\n        selectedVideos: files,\n        loaded: 0\n      });\n    }\n  }\n\n  fileUploadHandler(event) {\n    const data = new FormData();\n\n    for (let i = 0; i < this.state.selectedVideos.length; i++) {\n      data.append('file', this.state.selectedVideos[i]);\n    }\n\n    axios.post('http://127.0.0.1:3333/api/upload', data, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + JSON.parse(localStorage.getItem('userTokenTime')).token\n      }\n    }, {\n      onUploadProgress: ProgressEvent => {\n        this.setState({\n          loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n        });\n      }\n    }).then(res => {\n      toast.success('Upload Successful');\n    }).catch(err => {\n      toast.error(`Upload Fail with status: ${err.statusText}`);\n    });\n  }\n\n  render() {\n    if (!localStorage.getItem('userTokenTime')) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/signIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 56\n      }\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Upload Video\"), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      name: \"videoUpload\",\n      action: \"/api/upload\",\n      id: \"#\",\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group files\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"Upload Your Videos Here\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      className: \"form-control\",\n      multiple: \"multiple\",\n      accept: \"video/*\",\n      onChange: this.fileChangeHandler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Progress, {\n      max: \"100\",\n      color: \"success\",\n      value: this.state.loaded,\n      className: \"mt-4 mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, isNaN(Math.round(this.state.loaded, 2)) ? 0 : Math.round(this.state.loaded, 2), \"%\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-block\",\n      onClick: this.fileUploadHandler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, \"Upload Video\")))));\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/Users/lisa/Desktop/Github_Profile/Video_Server/client/src/components/Upload/Upload.js"],"names":["React","axios","Progress","ToastContainer","toast","Redirect","Navbar","Upload","Component","state","selectedVideos","loaded","maxSelectFile","event","files","target","length","error","value","err","i","size","name","fileChangeHandler","setState","fileUploadHandler","data","FormData","append","post","headers","JSON","parse","localStorage","getItem","token","onUploadProgress","ProgressEvent","total","then","res","success","catch","statusText","render","bind","isNaN","Math","round"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Redirect } from 'react-router-dom';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Upload.css';\nimport Navbar from '../Navbar/Navbar';\n\nclass Upload extends React.Component {\n  state = {\n    selectedVideos: null,\n    loaded: 0\n  }\n\n  maxSelectFile(event) {\n    let files = event.target.files;\n    if (files.length > 1) {\n      toast.error('Maximum 1 file is allowed');\n      event.target.value = null;\n      return false;\n    } else {\n      let err = '';\n      for (let i = 0; i < files.length; i++) {\n        if (files[i].size > 52428800) { // 50 MB\n          err += files[i].name + ', ';\n        }\n      }\n      if (err !== '') {\n        // error caught\n        event.target.value = null;\n        toast.error(err + \" is/are too large. Please select file size < 50Mb\");\n      }\n    }\n    return true;\n  }\n\n  fileChangeHandler(event) {\n    const files = event.target.files;\n    if (this.maxSelectFile(event)) {\n      this.setState({\n        selectedVideos: files,\n        loaded: 0\n      });\n    }\n  }\n\n  fileUploadHandler(event) {\n    const data = new FormData();\n    for (let i = 0; i < this.state.selectedVideos.length; i++) {\n      data.append('file', this.state.selectedVideos[i]);\n    }\n    axios.post('http://127.0.0.1:3333/api/upload', data, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + JSON.parse(localStorage.getItem('userTokenTime')).token\n      }\n    }, {\n      onUploadProgress: ProgressEvent => {\n        this.setState({\n          loaded: (ProgressEvent.loaded / ProgressEvent.total * 100)\n        });\n      }\n    }).then(res => {\n      toast.success('Upload Successful');\n    }).catch(err => {\n      toast.error(`Upload Fail with status: ${err.statusText}`);\n    });\n  }\n\n  render() {\n    if (!localStorage.getItem('userTokenTime')) return <Redirect to=\"/signIn\" />\n    return (\n      <React.Fragment>\n        <Navbar />\n        <div className=\"container mt-5\">\n          <div className=\"form-group\">\n            <ToastContainer />\n          </div>\n          <h5>Upload Video</h5>\n          <hr className=\"my-4\" />\n\n          <form method=\"post\" name=\"videoUpload\" action=\"/api/upload\" id=\"#\" encType=\"multipart/form-data\">\n            <div className=\"form-group files\">\n              <label>Upload Your Videos Here</label>\n              <input\n                type=\"file\"\n                name=\"file\"\n                className=\"form-control\"\n                multiple=\"multiple\"\n                accept=\"video/*\"\n                onChange={this.fileChangeHandler.bind(this)} />\n              <Progress max=\"100\" color=\"success\" value={this.state.loaded} className=\"mt-4 mb-1\">\n                {isNaN(Math.round(this.state.loaded, 2)) ? 0 : Math.round(this.state.loaded, 2)}%\n              </Progress>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary btn-block\"\n                onClick={this.fileUploadHandler.bind(this)}>Upload Video\n              </button>\n            </div>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}