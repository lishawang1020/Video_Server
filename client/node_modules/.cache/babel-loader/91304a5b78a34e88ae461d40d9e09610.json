{"ast":null,"code":"var _jsxFileName = \"/Users/lisa/Desktop/Github_Profile/Video_Server/client/src/components/VideoPlayer/VideoPlayer.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport videojs from 'video.js';\nimport './videojs.css';\nimport Navbar from '../Navbar/Navbar';\n\nclass VideoPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      videoJsOptions: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:3333/api/videoList', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + JSON.parse(localStorage.getItem('userTokenTime')).token\n      }\n    }).then(res => {\n      res.data.map(video => {\n        if (video.upload_title === this.props.match.params.videoTitle) {\n          this.setState({\n            loaded: true,\n            videoJsOptions: {\n              autoplay: false,\n              controls: true,\n              sources: [{\n                src: video.video_path\n              }],\n              fluid: true\n            }\n          }, () => {\n            this.player = videojs(this.videoNode, this.state.videoJsOptions, function onPlayerReady() {// console.log('onPlayerReady', this)\n            });\n          });\n        }\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    if (!localStorage.getItem('userTokenTime')) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/signIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 56\n      }\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        width: \"100vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-10 col-lg-8 mx-auto mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, this.state.loaded ? /*#__PURE__*/React.createElement(\"div\", {\n      \"data-vjs-player\": true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: node => this.videoNode = node,\n      className: \"video-js vjs-big-play-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    })) : ' Loading ... ')));\n  }\n\n}\n\nexport default VideoPlayer;","map":{"version":3,"sources":["/Users/lisa/Desktop/Github_Profile/Video_Server/client/src/components/VideoPlayer/VideoPlayer.js"],"names":["React","axios","Redirect","videojs","Navbar","VideoPlayer","Component","constructor","props","state","loaded","videoJsOptions","componentDidMount","get","headers","JSON","parse","localStorage","getItem","token","then","res","data","map","video","upload_title","match","params","videoTitle","setState","autoplay","controls","sources","src","video_path","fluid","player","videoNode","onPlayerReady","componentWillUnmount","dispose","render","width","node"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,cAAc,EAAE;AAFL,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBX,IAAAA,KAAK,CAACY,GAAN,CAAU,qCAAV,EAAiD;AAC/CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAiB,YAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,EAAkDC;AAFxE;AADsC,KAAjD,EAKGC,IALH,CAKQC,GAAG,IAAI;AACbA,MAAAA,GAAG,CAACC,IAAJ,CAASC,GAAT,CAAaC,KAAK,IAAI;AACpB,YAAIA,KAAK,CAACC,YAAN,KAAuB,KAAKjB,KAAL,CAAWkB,KAAX,CAAiBC,MAAjB,CAAwBC,UAAnD,EAA+D;AAC7D,eAAKC,QAAL,CAAc;AACZnB,YAAAA,MAAM,EAAE,IADI;AAEZC,YAAAA,cAAc,EAAE;AACdmB,cAAAA,QAAQ,EAAE,KADI;AAEdC,cAAAA,QAAQ,EAAE,IAFI;AAGdC,cAAAA,OAAO,EAAE,CAAC;AACRC,gBAAAA,GAAG,EAAET,KAAK,CAACU;AADH,eAAD,CAHK;AAMdC,cAAAA,KAAK,EAAE;AANO;AAFJ,WAAd,EAUG,MAAM;AACP,iBAAKC,MAAL,GAAcjC,OAAO,CAAC,KAAKkC,SAAN,EAAiB,KAAK5B,KAAL,CAAWE,cAA5B,EAA4C,SAAS2B,aAAT,GAAyB,CACxF;AACD,aAFoB,CAArB;AAGD,WAdD;AAeD;AACF,OAlBD;AAmBD,KAzBD;AA0BD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKH,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYI,OAAZ;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAACxB,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAL,EAA4C,oBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAC5C,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEwB,QAAAA,KAAK,EAAE;AAAT,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjC,KAAL,CAAWC,MAAX,gBACC;AAAK,6BAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,GAAG,EAAEiC,IAAI,IAAI,KAAKN,SAAL,GAAiBM,IAArC;AAA2C,MAAA,SAAS,EAAC,gCAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAIG,eALN,CADF,CAFF,CADF;AAcD;;AA5DuC;;AA+D1C,eAAetC,WAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nimport videojs from 'video.js';\nimport './videojs.css';\nimport Navbar from '../Navbar/Navbar';\n\nclass VideoPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      videoJsOptions: null\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:3333/api/videoList', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + JSON.parse(localStorage.getItem('userTokenTime')).token\n      }\n    }).then(res => {\n      res.data.map(video => {\n        if (video.upload_title === this.props.match.params.videoTitle) {\n          this.setState({\n            loaded: true,\n            videoJsOptions: {\n              autoplay: false,\n              controls: true,\n              sources: [{\n                src: video.video_path\n              }],\n              fluid: true\n            }\n          }, () => {\n            this.player = videojs(this.videoNode, this.state.videoJsOptions, function onPlayerReady() {\n              // console.log('onPlayerReady', this)\n            });\n          });\n        }\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose()\n    }\n  }\n\n  render() {\n    if (!localStorage.getItem('userTokenTime')) return <Redirect to=\"/signIn\" />\n    return (\n      <React.Fragment>\n        <Navbar />\n        <div className=\"row\" style={{ width: \"100vw\" }}>\n          <div className=\"col-xs-12 col-sm-12 col-md-10 col-lg-8 mx-auto mt-5\">\n            {this.state.loaded ? (\n              <div data-vjs-player>\n                <video ref={node => this.videoNode = node} className=\"video-js vjs-big-play-centered\" />\n              </div>\n            ) : ' Loading ... '}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default VideoPlayer;\n"]},"metadata":{},"sourceType":"module"}